<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteExMapper">


    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSiteEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.BaseResultMap">
        <association property="jobOrder" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.JobOrder"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.JobOrderMapper.BaseResultMap"
                     columnPrefix="j_">
        </association>
        <association property="lot" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Lot"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.LotMapper.BaseResultMap"
                     columnPrefix="l_">
        </association>
        <association property="assignedCompany" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Company"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.BaseResultMap"
                     columnPrefix="c_">
        </association>
        <association property="worksCompany" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Company"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.BaseResultMap"
                     columnPrefix="w_">
        </association>
        <association property="weeklyReferent" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Person"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.BaseResultMap"
                     columnPrefix="wr_">
        </association>
        <association property="companyManager" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Person"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.BaseResultMap"
                     columnPrefix="cm_">
        </association>
        <association property="cse" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Person"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.BaseResultMap"
                     columnPrefix="cse_">
        </association>
        <association property="address" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddressEx"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.PostalAddressExMapper.BaseResultMap"
                     columnPrefix="addr_">
        </association>
      <!--  <association property="address" fetchType="lazy" column="address_id"
                     select="it.memelabs.smartnebula.lmm.persistence.main.mapper.PostalAddressExMapper.selectByPrimaryKey">
        </association>-->

    </resultMap>

    <resultMap id="LocationsResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSiteEx"
               extends="BaseResultMap">

        <collection property="locations" javaType="ArrayList" column="id"
                    ofType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddressEx"
                    select="it.memelabs.smartnebula.lmm.persistence.main.mapper.PostalAddressExMapper.selectByConstructionSiteId"/>
    </resultMap>

    <sql id="Min_Alias_Column_List">
        ${tableAlias}code AS ${fieldAlias}code, 
        ${tableAlias}description AS ${fieldAlias}description 
    </sql>

    <sql id="Example_Where_Clause">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Example_Where_Clause"/>
            </trim>
            <if test="filterText != null">
                and (
                lower(cs.description) like lower(#{filterText})
                or lower(cs.code) like lower(#{filterText})
                )
            </if>
        </trim>
    </sql>

    <select id="selectByPrimaryKeyEx" parameterType="java.lang.Long" resultMap="LocationsResultMap">
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.JobOrderMapper.Alias_Column_List">
            <property name="tableAlias" value="j."/>
            <property name="fieldAlias" value="j_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.LotMapper.Alias_Column_List">
            <property name="tableAlias" value="l."/>
            <property name="fieldAlias" value="l_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="c."/>
            <property name="fieldAlias" value="c_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="w."/>
            <property name="fieldAlias" value="w_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="wr."/>
            <property name="fieldAlias" value="wr_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="cm."/>
            <property name="fieldAlias" value="cm_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="cse."/>
            <property name="fieldAlias" value="cse_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PostalAddressExMapper.Alias_Column_List">
            <property name="tableAlias" value="addr."/>
            <property name="fieldAlias" value="addr_"/>
        </include>
        from construction_site cs
        left join job_order j on cs.job_order_id = j.id
        left join lot l on cs.lot_id = l.id
        left join company c on cs.assigned_company_id = c.id
        left join company w on cs.works_company_id = w.id
        left join person wr on cs.weekly_referent_id = wr.id
        left join person cm on cs.company_manager_id = cm.id
        left join person cse on cs.cse_id = cse.id
        left join postal_address_view addr on cs.address_id = addr.id
        where cs.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getAddressId" parameterType="Long" resultType="java.lang.Long">
        select address_id from construction_site where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByContract" parameterType="Long"
            resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.BaseResultMap">
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value=""/>
        </include>
        from construction_site cs
        JOIN contract_construction_site ct on ct.construction_site_id = cs.id
        WHERE ct.contract_id = #{contractId,jdbcType=BIGINT}
        order by id
    </select>

    <select id="selectByFilterWithRowboundsEx"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSiteExExample"
            resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.JobOrderMapper.Alias_Column_List">
            <property name="tableAlias" value="j."/>
            <property name="fieldAlias" value="j_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.LotMapper.Alias_Column_List">
            <property name="tableAlias" value="l."/>
            <property name="fieldAlias" value="l_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="c."/>
            <property name="fieldAlias" value="c_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="w."/>
            <property name="fieldAlias" value="w_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="wr."/>
            <property name="fieldAlias" value="wr_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="cm."/>
            <property name="fieldAlias" value="cm_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="cse."/>
            <property name="fieldAlias" value="cse_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PostalAddressExMapper.Alias_Column_List">
            <property name="tableAlias" value="addr."/>
            <property name="fieldAlias" value="addr_"/>
        </include>

        from construction_site cs
        left join job_order j on cs.job_order_id = j.id
        left join lot l on cs.lot_id = l.id
        left join company c on cs.assigned_company_id = c.id
        left join company w on cs.works_company_id = w.id
        left join person wr on cs.weekly_referent_id = wr.id
        left join person cm on cs.company_manager_id = cm.id
        left join person cse on cs.cse_id = cse.id
        left join postal_address_view addr on cs.address_id = addr.id
        ) t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="countByFilterEx" resultType="java.lang.Integer">
        select count(*) from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.JobOrderMapper.Alias_Column_List">
            <property name="tableAlias" value="j."/>
            <property name="fieldAlias" value="j_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.LotMapper.Alias_Column_List">
            <property name="tableAlias" value="l."/>
            <property name="fieldAlias" value="l_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="c."/>
            <property name="fieldAlias" value="c_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="w."/>
            <property name="fieldAlias" value="w_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="wr."/>
            <property name="fieldAlias" value="wr_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="cm."/>
            <property name="fieldAlias" value="cm_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="cse."/>
            <property name="fieldAlias" value="cse_"/>
        </include>

        from construction_site cs
        left join job_order j on cs.job_order_id = j.id
        left join lot l on cs.lot_id = l.id
        left join company c on cs.assigned_company_id = c.id
        left join company w on cs.works_company_id = w.id
        left join person wr on cs.weekly_referent_id = wr.id
        left join person cm on cs.company_manager_id = cm.id
        left join person cse on cs.cse_id = cse.id
        ) t
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>

</mapper>