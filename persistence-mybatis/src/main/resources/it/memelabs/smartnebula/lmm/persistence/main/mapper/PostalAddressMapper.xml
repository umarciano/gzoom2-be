<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.PostalAddressMapper">
  <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddress">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="created_stamp" jdbcType="TIMESTAMP" property="createdStamp" />
    <result column="modified_stamp" jdbcType="TIMESTAMP" property="modifiedStamp" />
    <result column="created_by_user_id" jdbcType="BIGINT" property="createdByUserId" />
    <result column="modified_by_user_id" jdbcType="BIGINT" property="modifiedByUserId" />
    <result column="to_name" jdbcType="VARCHAR" property="toName" />
    <result column="attn_name" jdbcType="VARCHAR" property="attnName" />
    <result column="address1" jdbcType="VARCHAR" property="address1" />
    <result column="address2" jdbcType="VARCHAR" property="address2" />
    <result column="directions" jdbcType="VARCHAR" property="directions" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="postal_code" jdbcType="VARCHAR" property="postalCode" />
    <result column="country_geo_id" jdbcType="VARCHAR" property="countryGeoId" />
    <result column="state_province_geo_id" jdbcType="VARCHAR" property="stateProvinceGeoId" />
    <result column="postal_code_geo_id" jdbcType="VARCHAR" property="postalCodeGeoId" />
    <result column="foreign_region" jdbcType="VARCHAR" property="foreignRegion" />
    <result column="region_geo_id" jdbcType="VARCHAR" property="regionGeoId" />
    <result column="foreign_province" jdbcType="VARCHAR" property="foreignProvince" />
    <result column="municipality_geo_id" jdbcType="VARCHAR" property="municipalityGeoId" />
    <result column="street_number" jdbcType="VARCHAR" property="streetNumber" />
    <result column="village" jdbcType="VARCHAR" property="village" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    id, created_stamp, modified_stamp, created_by_user_id, modified_by_user_id, to_name, 
    attn_name, address1, address2, directions, city, postal_code, country_geo_id, state_province_geo_id, 
    postal_code_geo_id, foreign_region, region_geo_id, foreign_province, municipality_geo_id, 
    street_number, village
  </sql>
  <select id="selectByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddressExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from postal_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from postal_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    delete from postal_address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddressExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    delete from postal_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddress">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->

    <selectKey keyProperty="id" order="BEFORE" resultType="long">
      SELECT nextval('postal_address_id_seq');
    </selectKey>

    insert into postal_address (id, created_stamp, modified_stamp, 
      created_by_user_id, modified_by_user_id, to_name, 
      attn_name, address1, address2, 
      directions, city, postal_code, 
      country_geo_id, state_province_geo_id, postal_code_geo_id, 
      foreign_region, region_geo_id, foreign_province, 
      municipality_geo_id, street_number, village
      )
    values (#{id,jdbcType=BIGINT}, #{createdStamp,jdbcType=TIMESTAMP}, #{modifiedStamp,jdbcType=TIMESTAMP}, 
      #{createdByUserId,jdbcType=BIGINT}, #{modifiedByUserId,jdbcType=BIGINT}, #{toName,jdbcType=VARCHAR}, 
      #{attnName,jdbcType=VARCHAR}, #{address1,jdbcType=VARCHAR}, #{address2,jdbcType=VARCHAR}, 
      #{directions,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, 
      #{countryGeoId,jdbcType=VARCHAR}, #{stateProvinceGeoId,jdbcType=VARCHAR}, #{postalCodeGeoId,jdbcType=VARCHAR}, 
      #{foreignRegion,jdbcType=VARCHAR}, #{regionGeoId,jdbcType=VARCHAR}, #{foreignProvince,jdbcType=VARCHAR}, 
      #{municipalityGeoId,jdbcType=VARCHAR}, #{streetNumber,jdbcType=VARCHAR}, #{village,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddress">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    insert into postal_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdStamp != null">
        created_stamp,
      </if>
      <if test="modifiedStamp != null">
        modified_stamp,
      </if>
      <if test="createdByUserId != null">
        created_by_user_id,
      </if>
      <if test="modifiedByUserId != null">
        modified_by_user_id,
      </if>
      <if test="toName != null">
        to_name,
      </if>
      <if test="attnName != null">
        attn_name,
      </if>
      <if test="address1 != null">
        address1,
      </if>
      <if test="address2 != null">
        address2,
      </if>
      <if test="directions != null">
        directions,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="postalCode != null">
        postal_code,
      </if>
      <if test="countryGeoId != null">
        country_geo_id,
      </if>
      <if test="stateProvinceGeoId != null">
        state_province_geo_id,
      </if>
      <if test="postalCodeGeoId != null">
        postal_code_geo_id,
      </if>
      <if test="foreignRegion != null">
        foreign_region,
      </if>
      <if test="regionGeoId != null">
        region_geo_id,
      </if>
      <if test="foreignProvince != null">
        foreign_province,
      </if>
      <if test="municipalityGeoId != null">
        municipality_geo_id,
      </if>
      <if test="streetNumber != null">
        street_number,
      </if>
      <if test="village != null">
        village,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createdStamp != null">
        #{createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedStamp != null">
        #{modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByUserId != null">
        #{createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedByUserId != null">
        #{modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="toName != null">
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="attnName != null">
        #{attnName,jdbcType=VARCHAR},
      </if>
      <if test="address1 != null">
        #{address1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null">
        #{address2,jdbcType=VARCHAR},
      </if>
      <if test="directions != null">
        #{directions,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="countryGeoId != null">
        #{countryGeoId,jdbcType=VARCHAR},
      </if>
      <if test="stateProvinceGeoId != null">
        #{stateProvinceGeoId,jdbcType=VARCHAR},
      </if>
      <if test="postalCodeGeoId != null">
        #{postalCodeGeoId,jdbcType=VARCHAR},
      </if>
      <if test="foreignRegion != null">
        #{foreignRegion,jdbcType=VARCHAR},
      </if>
      <if test="regionGeoId != null">
        #{regionGeoId,jdbcType=VARCHAR},
      </if>
      <if test="foreignProvince != null">
        #{foreignProvince,jdbcType=VARCHAR},
      </if>
      <if test="municipalityGeoId != null">
        #{municipalityGeoId,jdbcType=VARCHAR},
      </if>
      <if test="streetNumber != null">
        #{streetNumber,jdbcType=VARCHAR},
      </if>
      <if test="village != null">
        #{village,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddressExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    select count(*) from postal_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    update postal_address
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createdStamp != null">
        created_stamp = #{record.createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedStamp != null">
        modified_stamp = #{record.modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdByUserId != null">
        created_by_user_id = #{record.createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedByUserId != null">
        modified_by_user_id = #{record.modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.toName != null">
        to_name = #{record.toName,jdbcType=VARCHAR},
      </if>
      <if test="record.attnName != null">
        attn_name = #{record.attnName,jdbcType=VARCHAR},
      </if>
      <if test="record.address1 != null">
        address1 = #{record.address1,jdbcType=VARCHAR},
      </if>
      <if test="record.address2 != null">
        address2 = #{record.address2,jdbcType=VARCHAR},
      </if>
      <if test="record.directions != null">
        directions = #{record.directions,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.postalCode != null">
        postal_code = #{record.postalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.countryGeoId != null">
        country_geo_id = #{record.countryGeoId,jdbcType=VARCHAR},
      </if>
      <if test="record.stateProvinceGeoId != null">
        state_province_geo_id = #{record.stateProvinceGeoId,jdbcType=VARCHAR},
      </if>
      <if test="record.postalCodeGeoId != null">
        postal_code_geo_id = #{record.postalCodeGeoId,jdbcType=VARCHAR},
      </if>
      <if test="record.foreignRegion != null">
        foreign_region = #{record.foreignRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.regionGeoId != null">
        region_geo_id = #{record.regionGeoId,jdbcType=VARCHAR},
      </if>
      <if test="record.foreignProvince != null">
        foreign_province = #{record.foreignProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.municipalityGeoId != null">
        municipality_geo_id = #{record.municipalityGeoId,jdbcType=VARCHAR},
      </if>
      <if test="record.streetNumber != null">
        street_number = #{record.streetNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.village != null">
        village = #{record.village,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    update postal_address
    set id = #{record.id,jdbcType=BIGINT},
      created_stamp = #{record.createdStamp,jdbcType=TIMESTAMP},
      modified_stamp = #{record.modifiedStamp,jdbcType=TIMESTAMP},
      created_by_user_id = #{record.createdByUserId,jdbcType=BIGINT},
      modified_by_user_id = #{record.modifiedByUserId,jdbcType=BIGINT},
      to_name = #{record.toName,jdbcType=VARCHAR},
      attn_name = #{record.attnName,jdbcType=VARCHAR},
      address1 = #{record.address1,jdbcType=VARCHAR},
      address2 = #{record.address2,jdbcType=VARCHAR},
      directions = #{record.directions,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      postal_code = #{record.postalCode,jdbcType=VARCHAR},
      country_geo_id = #{record.countryGeoId,jdbcType=VARCHAR},
      state_province_geo_id = #{record.stateProvinceGeoId,jdbcType=VARCHAR},
      postal_code_geo_id = #{record.postalCodeGeoId,jdbcType=VARCHAR},
      foreign_region = #{record.foreignRegion,jdbcType=VARCHAR},
      region_geo_id = #{record.regionGeoId,jdbcType=VARCHAR},
      foreign_province = #{record.foreignProvince,jdbcType=VARCHAR},
      municipality_geo_id = #{record.municipalityGeoId,jdbcType=VARCHAR},
      street_number = #{record.streetNumber,jdbcType=VARCHAR},
      village = #{record.village,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddress">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    update postal_address
    <set>
      <if test="createdStamp != null">
        created_stamp = #{createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedStamp != null">
        modified_stamp = #{modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByUserId != null">
        created_by_user_id = #{createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedByUserId != null">
        modified_by_user_id = #{modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="toName != null">
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="attnName != null">
        attn_name = #{attnName,jdbcType=VARCHAR},
      </if>
      <if test="address1 != null">
        address1 = #{address1,jdbcType=VARCHAR},
      </if>
      <if test="address2 != null">
        address2 = #{address2,jdbcType=VARCHAR},
      </if>
      <if test="directions != null">
        directions = #{directions,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="postalCode != null">
        postal_code = #{postalCode,jdbcType=VARCHAR},
      </if>
      <if test="countryGeoId != null">
        country_geo_id = #{countryGeoId,jdbcType=VARCHAR},
      </if>
      <if test="stateProvinceGeoId != null">
        state_province_geo_id = #{stateProvinceGeoId,jdbcType=VARCHAR},
      </if>
      <if test="postalCodeGeoId != null">
        postal_code_geo_id = #{postalCodeGeoId,jdbcType=VARCHAR},
      </if>
      <if test="foreignRegion != null">
        foreign_region = #{foreignRegion,jdbcType=VARCHAR},
      </if>
      <if test="regionGeoId != null">
        region_geo_id = #{regionGeoId,jdbcType=VARCHAR},
      </if>
      <if test="foreignProvince != null">
        foreign_province = #{foreignProvince,jdbcType=VARCHAR},
      </if>
      <if test="municipalityGeoId != null">
        municipality_geo_id = #{municipalityGeoId,jdbcType=VARCHAR},
      </if>
      <if test="streetNumber != null">
        street_number = #{streetNumber,jdbcType=VARCHAR},
      </if>
      <if test="village != null">
        village = #{village,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddress">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    update postal_address
    set created_stamp = #{createdStamp,jdbcType=TIMESTAMP},
      modified_stamp = #{modifiedStamp,jdbcType=TIMESTAMP},
      created_by_user_id = #{createdByUserId,jdbcType=BIGINT},
      modified_by_user_id = #{modifiedByUserId,jdbcType=BIGINT},
      to_name = #{toName,jdbcType=VARCHAR},
      attn_name = #{attnName,jdbcType=VARCHAR},
      address1 = #{address1,jdbcType=VARCHAR},
      address2 = #{address2,jdbcType=VARCHAR},
      directions = #{directions,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      postal_code = #{postalCode,jdbcType=VARCHAR},
      country_geo_id = #{countryGeoId,jdbcType=VARCHAR},
      state_province_geo_id = #{stateProvinceGeoId,jdbcType=VARCHAR},
      postal_code_geo_id = #{postalCodeGeoId,jdbcType=VARCHAR},
      foreign_region = #{foreignRegion,jdbcType=VARCHAR},
      region_geo_id = #{regionGeoId,jdbcType=VARCHAR},
      foreign_province = #{foreignProvince,jdbcType=VARCHAR},
      municipality_geo_id = #{municipalityGeoId,jdbcType=VARCHAR},
      street_number = #{streetNumber,jdbcType=VARCHAR},
      village = #{village,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Alias_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    ${tableAlias}id AS ${fieldAlias}id, ${tableAlias}created_stamp AS ${fieldAlias}created_stamp, 
    ${tableAlias}modified_stamp AS ${fieldAlias}modified_stamp, ${tableAlias}created_by_user_id AS ${fieldAlias}created_by_user_id, 
    ${tableAlias}modified_by_user_id AS ${fieldAlias}modified_by_user_id, ${tableAlias}to_name AS ${fieldAlias}to_name, 
    ${tableAlias}attn_name AS ${fieldAlias}attn_name, ${tableAlias}address1 AS ${fieldAlias}address1, 
    ${tableAlias}address2 AS ${fieldAlias}address2, ${tableAlias}directions AS ${fieldAlias}directions, 
    ${tableAlias}city AS ${fieldAlias}city, ${tableAlias}postal_code AS ${fieldAlias}postal_code, 
    ${tableAlias}country_geo_id AS ${fieldAlias}country_geo_id, ${tableAlias}state_province_geo_id AS ${fieldAlias}state_province_geo_id, 
    ${tableAlias}postal_code_geo_id AS ${fieldAlias}postal_code_geo_id, ${tableAlias}foreign_region AS ${fieldAlias}foreign_region, 
    ${tableAlias}region_geo_id AS ${fieldAlias}region_geo_id, ${tableAlias}foreign_province AS ${fieldAlias}foreign_province, 
    ${tableAlias}municipality_geo_id AS ${fieldAlias}municipality_geo_id, ${tableAlias}street_number AS ${fieldAlias}street_number, 
    ${tableAlias}village AS ${fieldAlias}village
  </sql>
  <select id="selectByExampleWithRowbounds" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PostalAddressExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri May 06 17:57:24 CEST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from postal_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>