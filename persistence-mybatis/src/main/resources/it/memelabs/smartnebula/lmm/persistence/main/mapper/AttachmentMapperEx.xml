<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapperEx">
    <select id="selectNextId" resultType="long">
        SELECT nextval('attachment_id_seq')
    </select>

    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.BaseResultMap">
        <result column="T_description" jdbcType="VARCHAR" property="typeDescription"/>
    </resultMap>

    <resultMap id="JoinResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.BaseResultMap">
        <result column="type_description" jdbcType="VARCHAR" property="typeDescription"/>
        <result column="aph_type_id" jdbcType="BIGINT" property="phaseTypeId"/>
        <result column="aph_type_description" jdbcType="VARCHAR" property="phaseTypeDescription"/>
        <association property="company" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.Company"
                     columnPrefix="comp_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.BaseResultMap"/>
        <association property="equipment" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.EquipmentEx"
                     columnPrefix="equip_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentExMapper.BaseResultMap"/>
        <association property="person" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.PersonEx"
                     columnPrefix="pers_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonExMapper.BaseResultMap"/>
        <association property="contract" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.ContractEx"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.ContractExMapper.BaseResultMap"
                     columnPrefix="cont_"/>
        <association property="antimafiaProcess"
                     javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.AntimafiaProcessEx"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.AntimafiaProcessExMapper.BaseResultMap"
                     columnPrefix="ap_"/>
        <association property="accident"
                     javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.AccidentEx"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.AccidentExMapper.BaseResultMap"
                     columnPrefix="acc_"/>
    </resultMap>

    <select id="selectByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="A."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentTypeMapper.Alias_Column_List">
            <property name="tableAlias" value="T."/>
            <property name="fieldAlias" value="T_"/>
        </include>
        from attachment as A
        left join attachment_type T on T.id=A.type_id
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="A."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentTypeMapper.Alias_Column_List">
            <property name="tableAlias" value="T."/>
            <property name="fieldAlias" value="T_"/>
        </include>
        from attachment AS A
        left join attachment_type T on T.id=A.type_id
        where A.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectWithCompany" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="comp."/>
            <property name="fieldAlias" value="comp_"/>
        </include>

        from attachment a
        left join attachment_type ae on ae.id=a.type_id
        left join company comp on a.company_id=comp.id
        ) t
        <where>
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <if test="_parameter != null">
                    <include
                            refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
                </if>
            </trim>
            <if test="entityStateTag">
                AND comp_state_tag = #{entityStateTag,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
        </where>
        order by comp_business_name, type_description
    </select>

    <select id="selectWithEquipment" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentMapper.Alias_Column_List">
            <property name="tableAlias" value="equip."/>
            <property name="fieldAlias" value="equip_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="ec."/>
            <property name="fieldAlias" value="equip_comp_"/>
        </include>

        from attachment a
        left join attachment_type ae on ae.id=a.type_id

        left join equipment equip on a.equipment_id=equip.id
        left join equipment_employment ee on equip.id=ee.equipment_id
        and ee.start_date &lt;= current_date and (ee.end_date is null or current_date &lt;= ee.end_date)
        left join company ec on ec.id=ee.company_id
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
        </if>
        order by equip_registration_number, equip_comp_business_name, type_description
    </select>

    <select id="selectWithPerson" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="pers."/>
            <property name="fieldAlias" value="pers_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="pc."/>
            <property name="fieldAlias" value="pers_comp_"/>
        </include>

        from attachment a

        left join attachment_type ae on ae.id=a.type_id
        left join person pers on a.person_id=pers.id
        left join person_employment pe on pe.person_id=pers.id
        and pe.start_date &lt;= current_date and (pe.end_date is null or current_date &lt;= pe.end_date)
        left join company pc on pc.id=pe.company_id
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
        </if>
        order by pers_last_name, pers_first_name, pers_comp_business_name, type_description
    </select>

    <select id="selectWithPersonEmployment"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.Alias_Column_List">
            <property name="tableAlias" value="pers."/>
            <property name="fieldAlias" value="pers_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="pc."/>
            <property name="fieldAlias" value="pers_comp_"/>
        </include>
        , pe.card_number as pers_pe_card_number
        , pe.state_tag as pers_pe_state_tag

        from attachment a
        left join attachment_type ae on ae.id=a.type_id

        left join person_employment pe on pe.id=a.person_employment_id

        <if test="filterEmploymentDate">
            and pe.start_date &lt;= current_date and (pe.end_date is null or current_date &lt;= pe.end_date)
        </if>
        left join person pers on pe.person_id=pers.id
        left join company pc on pc.id=pe.company_id
        ) t
        <where>
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <if test="_parameter != null">
                    <include
                            refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
                </if>
            </trim>
            <if test="entityStateTag">
                AND pers_pe_state_tag = #{entityStateTag,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
        </where>
        order by pers_last_name, pers_first_name, pers_comp_business_name, type_description
    </select>

    <select id="selectWithAntimafiaProcess"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AntimafiaProcessMapper.Alias_Column_List">
            <property name="tableAlias" value="ap."/>
            <property name="fieldAlias" value="ap_"/>
        </include>
        , ap.id as ap_id
        , app.id as ap_prefecture_id
        , app.description as ap_prefecture_description
        , apl.id as ap_lot_id
        , ap.created_stamp as ap_created_stamp
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.LotExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="apl."/>
            <property name="fieldAlias" value="ap_lot_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="apc."/>
            <property name="fieldAlias" value="ap_company_"/>
        </include>
        <if test="filterAntimafiaPhase">
            , aph.phase_type_id as aph_type_id
            , apht.description as aph_type_description
        </if>

        from attachment a
        left join attachment_type ae on ae.id=a.type_id

        <if test="filterAntimafiaPhase">
            left join antimafia_process_phase aph on a.antimafia_process_phase_id = aph.id
            left join antimafia_process ap on aph.antimafia_process_id = ap.id
            left join antimafia_process_phase_type apht on aph.phase_type_id = apht.id

        </if>
        <if test="!filterAntimafiaPhase">
            left join antimafia_process ap on a.antimafia_process_id = ap.id
        </if>
        left join lot apl on ap.lot_id = apl.id
        left JOIN company apc on ap.company_id = apc.id
        left join prefecture app on ap.prefecture_id = app.id
        ) t
        <where>
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <if test="_parameter != null">
                    <include
                            refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
                </if>
            </trim>
            <if test="entityStateTag">
                AND ap_state_tag = #{entityStateTag,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
        </where>
        order by ap_company_business_name, created_stamp, ap_lot_code, ap_prefecture_description, type_description
    </select>

    <select id="selectWithContract" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ContractMapper.Alias_Column_List">
            <property name="tableAlias" value="cont."/>
            <property name="fieldAlias" value="cont_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.Alias_Column_List">
            <property name="tableAlias" value="cc."/>
            <property name="fieldAlias" value="cont_PC_"/>
        </include>

        from attachment a
        left join attachment_type ae on ae.id=a.type_id

        left join contract cont on a.contract_id=cont.id
        left join company cc on cc.id=cont.performing_company_id
        ) t
        <where>
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <if test="_parameter != null">
                    <include
                            refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
                </if>
            </trim>
            <if test="entityStateTag">
                AND cont_state_tag = #{entityStateTag,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
        </where>
        order by cont_PC_business_name, cont_contract_number, type_description
    </select>

    <select id="selectWithAccident" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample"
            resultMap="JoinResultMap">
        select * from (
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Alias_Column_List">
            <property name="tableAlias" value="a."/>
            <property name="fieldAlias" value=""/>
        </include>
        , ae.description as type_description,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AccidentMapper.Alias_Column_List">
            <property name="tableAlias" value="acc."/>
            <property name="fieldAlias" value="acc_"/>
        </include>
        ,
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value="acc_cs_"/>
        </include>
        ,
        acc.construction_site_id as cs_id
        ,
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value="acc_pe_"/>
        </include>
        ,
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="p."/>
            <property name="fieldAlias" value="acc_pe_person_"/>
        </include>
        ,
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="co."/>
            <property name="fieldAlias" value="acc_pe_company_"/>
        </include>

        from attachment a
        left join attachment_type ae on ae.id=a.type_id
        left join accident acc on a.accident_id=acc.id
        LEFT JOIN construction_site cs on cs.id = acc.construction_site_id
        LEFT JOIN person_employment pe on pe.id = acc.person_employment_id
        LEFT JOIN company co on co.id = pe.company_id
        LEFT JOIN person p on p.id = pe.person_id
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper.Example_Where_Clause"/>
        </if>
        order by acc_since, acc_description
    </select>

</mapper>