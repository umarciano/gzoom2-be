<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentExMapper">

    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.EquipmentEmploymentEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.BaseResultMap">
        <association property="state" columnPrefix="state_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.BaseResultMap"/>
        <association property="company" columnPrefix="company_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.BaseResultMap"/>
        <association property="equipment" columnPrefix="equipment_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentMapper.BaseResultMap"/>
    </resultMap>

    <sql id="Select_Joined_Column_List">
        , es.description as state_description
        , c.state_tag as company_state_tag
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="c."/>
            <property name="fieldAlias" value="company_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="e."/>
            <property name="fieldAlias" value="equipment_"/>
        </include>
    </sql>

    <sql id="Select_Joined_Tables">
		left join entity_state es on ee.state_id=es.id
		left join company c on ee.company_id=c.id
		left join equipment e on ee.equipment_id=e.id
	</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="ee."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from equipment_employment ee
        <include refid="Select_Joined_Tables"/>
        where ee.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectExByExampleWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.EquipmentEmploymentExExample"
            resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="ee."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from equipment_employment ee
        <include refid="Select_Joined_Tables"/>
        ) t
        <if test="_parameter != null">
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <sql id="CountDateOverlap_Where_Clause">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Example_Where_Clause"/>
                <if test="employmentEndDate!=null">
                    and start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
                </if>
                and (end_date IS NULL OR end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
            </trim>
        </trim>
    </sql>


    <select id="countDateOverlap"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.EquipmentEmploymentExExample"
            resultType="java.lang.Integer">
        SELECT count(*) from (select distinct
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="ee."/>
            <property name="fieldAlias" value=""/>
        </include>
        FROM equipment_employment ee left join equipment_employment ee1 on
        ee1.id!=ee.id
        ) t
        <if test="_parameter != null">
            <include refid="CountDateOverlap_Where_Clause"/>
        </if>
    </select>


    <!--to be valid for weekly work log
     end_date is null or end_date >= first_day_of the week
     start_date <= last_day_of the week  -->
    <select id="selectWeekyWorkLogByExampleWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.EquipmentEmploymentWwlExample"
            resultMap="BaseResultMap">
        <if test="weeklyWorkLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="ee."/>
                <property name="fieldAlias" value=""/>
            </include>
            <include refid="Select_Joined_Column_List"/>
            from equipment_employment ee
            <include refid="Select_Joined_Tables"/>
            JOIN weekly_work_log_equipment wp on wp.equipment_empl_id=ee.id
            WHERE wp.weekly_work_log_id = #{weeklyWorkLogId}
            <if test="companyId!=null">and c.id =#{companyId}</if>
            UNION
        </if>
        <if test="workLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="ee."/>
                <property name="fieldAlias" value=""/>
            </include>
            <include refid="Select_Joined_Column_List"/>
            from equipment_employment ee
            <include refid="Select_Joined_Tables"/>
            JOIN work_log_equipment_event wp on wp.equipment_empl_id=ee.id
            WHERE wp.work_log_id = #{workLogId}
            <if test="companyId!=null">and c.id =#{companyId}</if>
            UNION
        </if>

        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="ee."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from equipment_employment ee
        <include refid="Select_Joined_Tables"/>
        ) t
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Example_Where_Clause"/>
                <if test="employmentEndDate!=null">
                    and start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
                </if>
                <if test="employmentStartDate!=null">
                    and (end_date IS NULL OR end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
                </if>
                <if test="companyStateTag!=null">
                    and (company_state_tag = #{companyStateTag})
                </if>
            </trim>
        </trim>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="countWeekyWorkLogByExample"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.EquipmentEmploymentWwlExample"
            resultType="integer">
        select count(1) from (
        <if test="weeklyWorkLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="ee."/>
                <property name="fieldAlias" value=""/>
            </include>
            , co.state_tag as company_state_tag
            from equipment_employment ee
            left join company co on ee.company_id=co.id
            JOIN weekly_work_log_equipment wp on wp.equipment_empl_id=ee.id
            WHERE wp.weekly_work_log_id = #{weeklyWorkLogId}
            <if test="companyId!=null">and co.id =#{companyId}</if>
            UNION
            select * FROM (
        </if>
        <if test="workLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="ee."/>
                <property name="fieldAlias" value=""/>
            </include>
            , co.state_tag as company_state_tag
            from equipment_employment ee
            left join company co on ee.company_id=co.id
            JOIN work_log_equipment_event wp on wp.equipment_empl_id=ee.id
            WHERE wp.work_log_id = #{workLogId}
            <if test="companyId!=null">and co.id =#{companyId}</if>
            UNION
            select * FROM (
        </if>
        select
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="ee."/>
            <property name="fieldAlias" value=""/>
        </include>
        , co.state_tag as company_state_tag
        from equipment_employment ee
        left join company co ON ee.company_id=co.id
        ) t
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Example_Where_Clause"/>
                <if test="employmentEndDate!=null">
                    and start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
                </if>
                <if test="employmentStartDate!=null">
                    and (end_date IS NULL OR end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
                </if>
                <if test="companyStateTag!=null">
                    and (company_state_tag = #{companyStateTag})
                </if>
            </trim>
        </trim>
        <if test="workLogId!=null">
            ) r
        </if>
        <if test="weeklyWorkLogId!=null">
            ) s
        </if>
    </select>


    <select id="selectByFreeTextWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dao.EmploymentToExportFilter"
            resultMap="BaseResultMap">
        select
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EquipmentEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="ee."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from equipment_employment ee
        <include refid="Select_Joined_Tables"/>
        WHERE
        ee.owner_node_id = #{ownerNodeId,jdbcType=BIGINT}
        <if test="filterText != null">
            AND (
            lower(e.registration_number) LIKE (#{filterText,jdbcType=VARCHAR})
            OR
            lower(e.brand) LIKE (#{filterText,jdbcType=VARCHAR})
            OR
            lower(e.model) LIKE (#{filterText,jdbcType=VARCHAR})
            )
        </if>
        <if test="filterDate != null">
            AND
            <![CDATA[ ee.start_date <= #{filterDate,jdbcType=DATE}]]>
            AND (
            <![CDATA[ ee.end_date >= #{filterDate,jdbcType=DATE}]]>
            OR
            ee.end_date IS NULL)
        </if>
        order by e.registration_number, ee.start_date desc, ee.end_date desc, ee.id
    </select>

</mapper>
