<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentExMapper">

    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.PersonEmploymentEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.BaseResultMap">
        <association property="state" columnPrefix="state_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.BaseResultMap"/>
        <association property="company" columnPrefix="company_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.BaseResultMap"/>
        <association property="person" columnPrefix="person_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonMapper.BaseResultMap"/>
        <association property="role" columnPrefix="role_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.IdentifiableMapper.BaseResultMap"/>
        <association property="job" columnPrefix="pjob_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.IdentifiableMapper.BaseResultMap"/>
        <association property="destinationCompany" columnPrefix="destination_company_"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyMapper.BaseResultMap"/>
    </resultMap>

    <sql id="Select_Joined_Column_List">
        , es.description as state_description
        , pr.description as role_description
        , pj.id as pjob_id
        , pj.description as pjob_description
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="c."/>
            <property name="fieldAlias" value="company_"/>
        </include>
        , c.state_tag as company_state_tag
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.CompanyExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="oc."/>
            <property name="fieldAlias" value="destination_company_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="p."/>
            <property name="fieldAlias" value="person_"/>
        </include>
    </sql>

    <sql id="Select_Joined_Tables">
		left join entity_state es on pe.state_id=es.id
		left join company c on pe.company_id=c.id
		left join person p on pe.person_id=p.id
		left join person_role pr on pe.role_id=pr.id
		left join person_job pj on pe.job_id=pj.id
		left join company oc on pe.destination_company_id=oc.id
	</sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from person_employment pe
        <include refid="Select_Joined_Tables"/>
        where pe.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectExByExampleWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PersonEmploymentExample"
            resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from person_employment pe
        <include refid="Select_Joined_Tables"/>
        ) t
        <if test="_parameter != null">
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <sql id="CountDateOverlap_Where_Clause">
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Example_Where_Clause"/>
                <if test="employmentEndDate!=null">
                    and start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
                </if>
                and (end_date IS NULL OR end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
            </trim>
        </trim>
    </sql>

    <select id="countDateOverlap"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PersonEmploymentExExample"
            resultType="java.lang.Integer">

        SELECT count(*) from (select distinct
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value=""/>
        </include>
        FROM person_employment pe left join person_employment pe1 on
        pe1.id!=pe.id
        ) t
        <if test="_parameter != null">
            <include refid="CountDateOverlap_Where_Clause"/>
        </if>
    </select>

    <!--to be valid for weekly work log
     end_date is null or end_date >= first_day_of the week
     start_date <= last_day_of the week  -->
    <select id="selectWeekyWorkLogByExampleWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PersonEmploymentWwlExample"
            resultMap="BaseResultMap">

        <if test="weeklyWorkLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="pe."/>
                <property name="fieldAlias" value=""/>
            </include>
            <include refid="Select_Joined_Column_List"/>
            from person_employment pe
            <include refid="Select_Joined_Tables"/>
            JOIN weekly_work_log_person wp on wp.person_empl_id=pe.id
            WHERE wp.weekly_work_log_id = #{weeklyWorkLogId}
            <if test="companyId!=null">and c.id =#{companyId}</if>
            UNION
        </if>
        <if test="workLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="pe."/>
                <property name="fieldAlias" value=""/>
            </include>
            <include refid="Select_Joined_Column_List"/>
            from person_employment pe
            <include refid="Select_Joined_Tables"/>
            JOIN work_log_person_event wp on wp.person_empl_id=pe.id
            WHERE wp.work_log_id = #{workLogId}
            <if test="companyId!=null">and c.id =#{companyId}</if>
            UNION
        </if>

        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from person_employment pe
        <include refid="Select_Joined_Tables"/>
        ) t
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Example_Where_Clause"/>
                <if test="employmentEndDate!=null">
                    and start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
                </if>
                <if test="employmentStartDate!=null">
                    and (end_date IS NULL OR end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
                </if>
                <if test="companyStateTag!=null">
                    and (company_state_tag = #{companyStateTag})
                </if>
            </trim>
        </trim>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="countWeekyWorkLogByExample"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.PersonEmploymentWwlExample"
            resultType="integer">
        select count(1) from (
        <if test="weeklyWorkLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="pe."/>
                <property name="fieldAlias" value=""/>
            </include>
            , co.state_tag as company_state_tag
            from person_employment pe
            left join company co on pe.company_id=co.id
            JOIN weekly_work_log_person wp on wp.person_empl_id=pe.id
            WHERE wp.weekly_work_log_id = #{weeklyWorkLogId}
            <if test="companyId!=null">and co.id =#{companyId}</if>
            UNION
            select * FROM (
        </if>
        <if test="workLogId!=null">
            SELECT
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
                <property name="tableAlias" value="pe."/>
                <property name="fieldAlias" value=""/>
            </include>
            , co.state_tag as company_state_tag
            from person_employment pe
            left join company co on pe.company_id=co.id
            JOIN work_log_person_event wp on wp.person_empl_id=pe.id
            WHERE wp.work_log_id = #{workLogId}
            <if test="companyId!=null">and co.id =#{companyId}</if>
            UNION
            select * FROM (
        </if>
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value=""/>
        </include>
        , co.state_tag as company_state_tag
        from person_employment AS pe
        left join company co on pe.company_id=co.id
        ) t
        <trim prefix="WHERE" prefixOverrides="and |or ">
            <trim prefix="and (" suffix=")" prefixOverrides="WHERE">
                <include
                        refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Example_Where_Clause"/>
                <if test="employmentEndDate!=null">
                    and start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
                </if>
                <if test="employmentStartDate!=null">
                    and (end_date IS NULL OR end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
                </if>
                <if test="companyStateTag!=null">
                    and (company_state_tag = #{companyStateTag})
                </if>
            </trim>
        </trim>
        <if test="workLogId!=null">
            ) r
        </if>
        <if test="weeklyWorkLogId!=null">
            ) s
        </if>
    </select>


    <select id="selectByFreeTextWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dao.PersonEmploymentFilter"
            resultMap="BaseResultMap">
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.PersonEmploymentMapper.Alias_Column_List">
            <property name="tableAlias" value="pe."/>
            <property name="fieldAlias" value=""/>
        </include>
        <include refid="Select_Joined_Column_List"/>
        from person_employment pe
        <include refid="Select_Joined_Tables"/>
        WHERE
        pe.owner_node_id = #{ownerNodeId,jdbcType=BIGINT}
        <if test="filterText != null">
            AND (
            lower(p.last_name) LIKE (#{filterText,jdbcType=VARCHAR})
            OR
            lower(p.first_name) LIKE (#{filterText,jdbcType=VARCHAR}))
        </if>
        <if test="filterDate != null">
            AND
            <![CDATA[ pe.start_date <= #{filterDate,jdbcType=DATE}]]>
            AND (
            <![CDATA[ pe.end_date >= #{filterDate,jdbcType=DATE}]]>
            OR
            pe.end_date IS NULL)
        </if>
        order by p.last_name, p.first_name, pe.start_date desc, pe.end_date desc, pe.id
    </select>


    <select id="selectNextExternalId" resultType="long">
        SELECT nextval('employment_external_id')
    </select>

</mapper>
