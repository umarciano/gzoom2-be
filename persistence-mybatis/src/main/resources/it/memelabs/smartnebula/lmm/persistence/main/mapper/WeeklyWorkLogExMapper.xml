<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.WeeklyWorkLogExMapper">

    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.WeeklyWorkLogEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.WeeklyWorkLogMapper.BaseResultMap">
        <result column="person_count" jdbcType="INTEGER" property="personCount"/>
        <result column="equipment_count" jdbcType="INTEGER" property="equipmentCount"/>
        <result column="company_count" jdbcType="INTEGER" property="companyCount"/>
        <association property="state" columnPrefix="state_"
                     javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.EntityState"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.BaseResultMap"/>
        <association property="constructionSite" columnPrefix="construction_site_"
                     javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSite"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.BaseResultMap"/>
    </resultMap>

    <resultMap id="CompanyEmplResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.CompanyEmployment">
        <id column="company_id" jdbcType="BIGINT" property="companyId"/>
        <id column="empl_id" jdbcType="BIGINT" property="emplId"/>
    </resultMap>

    <sql id="Select_Joined_Column_List">
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.WeeklyWorkLogMapper.Alias_Column_List">
            <property name="tableAlias" value="WWL."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.Alias_Column_List">
            <property name="tableAlias" value="ES."/>
            <property name="fieldAlias" value="state_"/>
        </include>
        ,
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="CS."/>
            <property name="fieldAlias" value="construction_site_"/>
        </include>
    </sql>

    <sql id="Select_Joined_Tables">
        left join entity_state ES on WWL.state_id = ES.id
        left join construction_site CS on WWL.construction_site_id = CS.id
    </sql>

    <sql id="Select_Joined_Person_Count">
        left join (
            select weekly_work_log_id, count(*) as person_count
            from weekly_work_log_person
            group by weekly_work_log_id
        ) WWLP on WWL.id = WWLP.weekly_work_log_id
    </sql>

    <sql id="Select_Joined_Equipment_Count">
        left join (
            select weekly_work_log_id, count(*) as equipment_count
            from weekly_work_log_equipment
            group by weekly_work_log_id
        ) WWLE on WWL.id = WWLE.weekly_work_log_id
    </sql>

    <sql id="Select_Joined_Company_Count">
        left join (
            select weekly_work_log_id, count(*) as company_count
            from (
                select wp.weekly_work_log_id, pe.company_id
                from weekly_work_log_person wp
                inner join person_employment pe on wp.person_empl_id=pe.id
                union
                select we.weekly_work_log_id, ee.company_id 
                from weekly_work_log_equipment we
                inner join equipment_employment ee on we.equipment_empl_id=ee.id
            ) wwlc
            group by weekly_work_log_id
        ) WWLC on WWL.id = WWLC.weekly_work_log_id
    </sql>

    <select id="selectExByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Select_Joined_Column_List"/>
        from weekly_work_log WWL
        <include refid="Select_Joined_Tables"/>
        where WWL.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectExByExampleWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.WeeklyWorkLogExample"
            resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Select_Joined_Column_List"/>
        , WWLP.person_count
        , WWLE.equipment_count
        , WWLC.company_count
        from weekly_work_log WWL
        <include refid="Select_Joined_Tables"/>
        <include refid="Select_Joined_Person_Count"/>
        <include refid="Select_Joined_Equipment_Count"/>
        <include refid="Select_Joined_Company_Count"/>
        ) t
        <if test="_parameter != null">
            <include
                    refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.WeeklyWorkLogMapper.Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectCompanyPersonEmpl" parameterType="java.lang.Long" resultMap="CompanyEmplResultMap">
        select pe.company_id, wp.person_empl_id as empl_id
        from weekly_work_log_person wp
        inner join person_employment pe on wp.person_empl_id=pe.id
        where
        wp.weekly_work_log_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectCompanyEquipmentEmpl" parameterType="java.lang.Long" resultMap="CompanyEmplResultMap">
        select ee.company_id, we.equipment_empl_id as empl_id
        from weekly_work_log_equipment we
        inner join equipment_employment ee on
        we.equipment_empl_id=ee.id
        where we.weekly_work_log_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="validatePersonEmployment" resultType="long">
        select wp.person_empl_id from weekly_work_log_person wp
        left join person_employment pe on wp.person_empl_id = pe.id
        left join company co on pe.company_id = co.id
        where wp.weekly_work_log_id = #{id,jdbcType=BIGINT}
        and not (
        pe.start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
        and (pe.end_date IS NULL OR pe.end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
        and pe.state_tag = 'AUTHORIZED'
        and co.state_tag = 'AUTHORIZED'
        )
    </select>

    <select id="validateEquipmentEmployment" resultType="long">
        select wp.equipment_empl_id from weekly_work_log_equipment wp
        left join equipment_employment ee on wp.equipment_empl_id= ee.id
        left join company co on ee.company_id = co.id
        where wp.weekly_work_log_id = #{id,jdbcType=BIGINT}
        and not (
        ee.start_date&lt;=to_date(#{employmentEndDate}, 'YYYY-MM-DD')
        and (ee.end_date IS NULL OR ee.end_date >= to_date(#{employmentStartDate}, 'YYYY-MM-DD'))
        and ee.state_tag = 'AUTHORIZED'
        and co.state_tag = 'AUTHORIZED'
        )
    </select>

    <insert id="duplicatePersonEmployment"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.WeeklyWorkLogPersonEx">
        insert into weekly_work_log_person
        (weekly_work_log_id, person_empl_id, created_stamp, created_by_user_id)
        select #{weeklyWorkLogId}, person_empl_id, #{createdStamp,jdbcType=TIMESTAMP}, #{createdByUserId,jdbcType=BIGINT}
        from weekly_work_log_person
        where weekly_work_log_id = #{weeklyWorkLogIdOrig,jdbcType=BIGINT}
    </insert>

    <insert id="duplicateEquipmentEmployment"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.WeeklyWorkLogEquipmentEx">
        insert into weekly_work_log_equipment
        (weekly_work_log_id, equipment_empl_id, created_stamp, created_by_user_id)
        select #{weeklyWorkLogId}, equipment_empl_id, #{createdStamp,jdbcType=TIMESTAMP}, #{createdByUserId,jdbcType=BIGINT}
        from weekly_work_log_equipment
        where weekly_work_log_id = #{weeklyWorkLogIdOrig,jdbcType=BIGINT}
    </insert>

</mapper>
