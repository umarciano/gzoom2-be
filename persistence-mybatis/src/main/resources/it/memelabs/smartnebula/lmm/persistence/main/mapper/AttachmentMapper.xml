<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.AttachmentMapper">
  <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.Attachment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="modified_stamp" jdbcType="TIMESTAMP" property="modifiedStamp" />
    <result column="created_stamp" jdbcType="TIMESTAMP" property="createdStamp" />
    <result column="uploaded_stamp" jdbcType="TIMESTAMP" property="uploadedStamp" />
    <result column="created_by_user_id" jdbcType="BIGINT" property="createdByUserId" />
    <result column="modified_by_user_id" jdbcType="BIGINT" property="modifiedByUserId" />
    <result column="uploaded_by_user_id" jdbcType="BIGINT" property="uploadedByUserId" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="filename" jdbcType="VARCHAR" property="filename" />
    <result column="mime_type" jdbcType="VARCHAR" property="mimeType" />
    <result column="bucket_name" jdbcType="VARCHAR" property="bucketName" />
    <result column="storage_path" jdbcType="VARCHAR" property="storagePath" />
    <result column="storage_file" jdbcType="VARCHAR" property="storageFile" />
    <result column="sha1" jdbcType="VARCHAR" property="sha1" />
    <result column="size" jdbcType="BIGINT" property="size" />
    <result column="valid_since" jdbcType="TIMESTAMP" property="validSince" />
    <result column="valid_until" jdbcType="TIMESTAMP" property="validUntil" />
    <result column="status" jdbcType="VARCHAR" property="status" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
    <result column="storage_type" jdbcType="VARCHAR" property="storageType" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
    <result column="owner_node_id" jdbcType="BIGINT" property="ownerNodeId" />
    <result column="entity" jdbcType="VARCHAR" property="entity" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="equipment_id" jdbcType="BIGINT" property="equipmentId" />
    <result column="equipment_employment_id" jdbcType="BIGINT" property="equipmentEmploymentId" />
    <result column="person_id" jdbcType="BIGINT" property="personId" />
    <result column="person_employment_id" jdbcType="BIGINT" property="personEmploymentId" />
    <result column="antimafia_process_id" jdbcType="BIGINT" property="antimafiaProcessId" />
    <result column="antimafia_process_phase_id" jdbcType="BIGINT" property="antimafiaProcessPhaseId" />
    <result column="contract_id" jdbcType="BIGINT" property="contractId" />
    <result column="reference_year" jdbcType="VARCHAR" property="referenceYear" />
    <result column="reference_month" jdbcType="VARCHAR" property="referenceMonth" />
    <result column="accident_id" jdbcType="BIGINT" property="accidentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.storageTypeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.entityCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.storageTypeCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.entityCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    id, description, modified_stamp, created_stamp, uploaded_stamp, created_by_user_id, 
    modified_by_user_id, uploaded_by_user_id, type_id, filename, mime_type, bucket_name, 
    storage_path, storage_file, sha1, size, valid_since, valid_until, status, storage_type, 
    owner_node_id, entity, company_id, equipment_id, equipment_employment_id, person_id, 
    person_employment_id, antimafia_process_id, antimafia_process_phase_id, contract_id, 
    reference_year, reference_month, accident_id
  </sql>
  <select id="selectByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from attachment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    delete from attachment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    delete from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Attachment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('attachment_id_seq')
    </selectKey>
    insert into attachment (id, description, modified_stamp, 
      created_stamp, uploaded_stamp, created_by_user_id, 
      modified_by_user_id, uploaded_by_user_id, type_id, 
      filename, mime_type, bucket_name, 
      storage_path, storage_file, sha1, 
      size, valid_since, valid_until, 
      status, 
      storage_type, 
      owner_node_id, entity, 
      company_id, equipment_id, equipment_employment_id, 
      person_id, person_employment_id, antimafia_process_id, 
      antimafia_process_phase_id, contract_id, reference_year, 
      reference_month, accident_id)
    values (#{id,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{modifiedStamp,jdbcType=TIMESTAMP}, 
      #{createdStamp,jdbcType=TIMESTAMP}, #{uploadedStamp,jdbcType=TIMESTAMP}, #{createdByUserId,jdbcType=BIGINT}, 
      #{modifiedByUserId,jdbcType=BIGINT}, #{uploadedByUserId,jdbcType=BIGINT}, #{typeId,jdbcType=BIGINT}, 
      #{filename,jdbcType=VARCHAR}, #{mimeType,jdbcType=VARCHAR}, #{bucketName,jdbcType=VARCHAR}, 
      #{storagePath,jdbcType=VARCHAR}, #{storageFile,jdbcType=VARCHAR}, #{sha1,jdbcType=VARCHAR}, 
      #{size,jdbcType=BIGINT}, #{validSince,jdbcType=TIMESTAMP}, #{validUntil,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
      #{storageType,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
      #{ownerNodeId,jdbcType=BIGINT}, #{entity,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
      #{companyId,jdbcType=BIGINT}, #{equipmentId,jdbcType=BIGINT}, #{equipmentEmploymentId,jdbcType=BIGINT}, 
      #{personId,jdbcType=BIGINT}, #{personEmploymentId,jdbcType=BIGINT}, #{antimafiaProcessId,jdbcType=BIGINT}, 
      #{antimafiaProcessPhaseId,jdbcType=BIGINT}, #{contractId,jdbcType=BIGINT}, #{referenceYear,jdbcType=VARCHAR}, 
      #{referenceMonth,jdbcType=VARCHAR}, #{accidentId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Attachment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('attachment_id_seq')
    </selectKey>
    insert into attachment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="description != null">
        description,
      </if>
      <if test="modifiedStamp != null">
        modified_stamp,
      </if>
      <if test="createdStamp != null">
        created_stamp,
      </if>
      <if test="uploadedStamp != null">
        uploaded_stamp,
      </if>
      <if test="createdByUserId != null">
        created_by_user_id,
      </if>
      <if test="modifiedByUserId != null">
        modified_by_user_id,
      </if>
      <if test="uploadedByUserId != null">
        uploaded_by_user_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="filename != null">
        filename,
      </if>
      <if test="mimeType != null">
        mime_type,
      </if>
      <if test="bucketName != null">
        bucket_name,
      </if>
      <if test="storagePath != null">
        storage_path,
      </if>
      <if test="storageFile != null">
        storage_file,
      </if>
      <if test="sha1 != null">
        sha1,
      </if>
      <if test="size != null">
        size,
      </if>
      <if test="validSince != null">
        valid_since,
      </if>
      <if test="validUntil != null">
        valid_until,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="storageType != null">
        storage_type,
      </if>
      <if test="ownerNodeId != null">
        owner_node_id,
      </if>
      <if test="entity != null">
        entity,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="equipmentId != null">
        equipment_id,
      </if>
      <if test="equipmentEmploymentId != null">
        equipment_employment_id,
      </if>
      <if test="personId != null">
        person_id,
      </if>
      <if test="personEmploymentId != null">
        person_employment_id,
      </if>
      <if test="antimafiaProcessId != null">
        antimafia_process_id,
      </if>
      <if test="antimafiaProcessPhaseId != null">
        antimafia_process_phase_id,
      </if>
      <if test="contractId != null">
        contract_id,
      </if>
      <if test="referenceYear != null">
        reference_year,
      </if>
      <if test="referenceMonth != null">
        reference_month,
      </if>
      <if test="accidentId != null">
        accident_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="modifiedStamp != null">
        #{modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdStamp != null">
        #{createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadedStamp != null">
        #{uploadedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByUserId != null">
        #{createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedByUserId != null">
        #{modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="uploadedByUserId != null">
        #{uploadedByUserId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="filename != null">
        #{filename,jdbcType=VARCHAR},
      </if>
      <if test="mimeType != null">
        #{mimeType,jdbcType=VARCHAR},
      </if>
      <if test="bucketName != null">
        #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="storagePath != null">
        #{storagePath,jdbcType=VARCHAR},
      </if>
      <if test="storageFile != null">
        #{storageFile,jdbcType=VARCHAR},
      </if>
      <if test="sha1 != null">
        #{sha1,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        #{size,jdbcType=BIGINT},
      </if>
      <if test="validSince != null">
        #{validSince,jdbcType=TIMESTAMP},
      </if>
      <if test="validUntil != null">
        #{validUntil,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="storageType != null">
        #{storageType,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="ownerNodeId != null">
        #{ownerNodeId,jdbcType=BIGINT},
      </if>
      <if test="entity != null">
        #{entity,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="equipmentId != null">
        #{equipmentId,jdbcType=BIGINT},
      </if>
      <if test="equipmentEmploymentId != null">
        #{equipmentEmploymentId,jdbcType=BIGINT},
      </if>
      <if test="personId != null">
        #{personId,jdbcType=BIGINT},
      </if>
      <if test="personEmploymentId != null">
        #{personEmploymentId,jdbcType=BIGINT},
      </if>
      <if test="antimafiaProcessId != null">
        #{antimafiaProcessId,jdbcType=BIGINT},
      </if>
      <if test="antimafiaProcessPhaseId != null">
        #{antimafiaProcessPhaseId,jdbcType=BIGINT},
      </if>
      <if test="contractId != null">
        #{contractId,jdbcType=BIGINT},
      </if>
      <if test="referenceYear != null">
        #{referenceYear,jdbcType=VARCHAR},
      </if>
      <if test="referenceMonth != null">
        #{referenceMonth,jdbcType=VARCHAR},
      </if>
      <if test="accidentId != null">
        #{accidentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    select count(*) from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    update attachment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.modifiedStamp != null">
        modified_stamp = #{record.modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdStamp != null">
        created_stamp = #{record.createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uploadedStamp != null">
        uploaded_stamp = #{record.uploadedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdByUserId != null">
        created_by_user_id = #{record.createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedByUserId != null">
        modified_by_user_id = #{record.modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.uploadedByUserId != null">
        uploaded_by_user_id = #{record.uploadedByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.filename != null">
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
      <if test="record.mimeType != null">
        mime_type = #{record.mimeType,jdbcType=VARCHAR},
      </if>
      <if test="record.bucketName != null">
        bucket_name = #{record.bucketName,jdbcType=VARCHAR},
      </if>
      <if test="record.storagePath != null">
        storage_path = #{record.storagePath,jdbcType=VARCHAR},
      </if>
      <if test="record.storageFile != null">
        storage_file = #{record.storageFile,jdbcType=VARCHAR},
      </if>
      <if test="record.sha1 != null">
        sha1 = #{record.sha1,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null">
        size = #{record.size,jdbcType=BIGINT},
      </if>
      <if test="record.validSince != null">
        valid_since = #{record.validSince,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validUntil != null">
        valid_until = #{record.validUntil,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="record.storageType != null">
        storage_type = #{record.storageType,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="record.ownerNodeId != null">
        owner_node_id = #{record.ownerNodeId,jdbcType=BIGINT},
      </if>
      <if test="record.entity != null">
        entity = #{record.entity,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.equipmentId != null">
        equipment_id = #{record.equipmentId,jdbcType=BIGINT},
      </if>
      <if test="record.equipmentEmploymentId != null">
        equipment_employment_id = #{record.equipmentEmploymentId,jdbcType=BIGINT},
      </if>
      <if test="record.personId != null">
        person_id = #{record.personId,jdbcType=BIGINT},
      </if>
      <if test="record.personEmploymentId != null">
        person_employment_id = #{record.personEmploymentId,jdbcType=BIGINT},
      </if>
      <if test="record.antimafiaProcessId != null">
        antimafia_process_id = #{record.antimafiaProcessId,jdbcType=BIGINT},
      </if>
      <if test="record.antimafiaProcessPhaseId != null">
        antimafia_process_phase_id = #{record.antimafiaProcessPhaseId,jdbcType=BIGINT},
      </if>
      <if test="record.contractId != null">
        contract_id = #{record.contractId,jdbcType=BIGINT},
      </if>
      <if test="record.referenceYear != null">
        reference_year = #{record.referenceYear,jdbcType=VARCHAR},
      </if>
      <if test="record.referenceMonth != null">
        reference_month = #{record.referenceMonth,jdbcType=VARCHAR},
      </if>
      <if test="record.accidentId != null">
        accident_id = #{record.accidentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    update attachment
    set id = #{record.id,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      modified_stamp = #{record.modifiedStamp,jdbcType=TIMESTAMP},
      created_stamp = #{record.createdStamp,jdbcType=TIMESTAMP},
      uploaded_stamp = #{record.uploadedStamp,jdbcType=TIMESTAMP},
      created_by_user_id = #{record.createdByUserId,jdbcType=BIGINT},
      modified_by_user_id = #{record.modifiedByUserId,jdbcType=BIGINT},
      uploaded_by_user_id = #{record.uploadedByUserId,jdbcType=BIGINT},
      type_id = #{record.typeId,jdbcType=BIGINT},
      filename = #{record.filename,jdbcType=VARCHAR},
      mime_type = #{record.mimeType,jdbcType=VARCHAR},
      bucket_name = #{record.bucketName,jdbcType=VARCHAR},
      storage_path = #{record.storagePath,jdbcType=VARCHAR},
      storage_file = #{record.storageFile,jdbcType=VARCHAR},
      sha1 = #{record.sha1,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=BIGINT},
      valid_since = #{record.validSince,jdbcType=TIMESTAMP},
      valid_until = #{record.validUntil,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      storage_type = #{record.storageType,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      owner_node_id = #{record.ownerNodeId,jdbcType=BIGINT},
      entity = #{record.entity,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      company_id = #{record.companyId,jdbcType=BIGINT},
      equipment_id = #{record.equipmentId,jdbcType=BIGINT},
      equipment_employment_id = #{record.equipmentEmploymentId,jdbcType=BIGINT},
      person_id = #{record.personId,jdbcType=BIGINT},
      person_employment_id = #{record.personEmploymentId,jdbcType=BIGINT},
      antimafia_process_id = #{record.antimafiaProcessId,jdbcType=BIGINT},
      antimafia_process_phase_id = #{record.antimafiaProcessPhaseId,jdbcType=BIGINT},
      contract_id = #{record.contractId,jdbcType=BIGINT},
      reference_year = #{record.referenceYear,jdbcType=VARCHAR},
      reference_month = #{record.referenceMonth,jdbcType=VARCHAR},
      accident_id = #{record.accidentId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Attachment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    update attachment
    <set>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="modifiedStamp != null">
        modified_stamp = #{modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdStamp != null">
        created_stamp = #{createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="uploadedStamp != null">
        uploaded_stamp = #{uploadedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByUserId != null">
        created_by_user_id = #{createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedByUserId != null">
        modified_by_user_id = #{modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="uploadedByUserId != null">
        uploaded_by_user_id = #{uploadedByUserId,jdbcType=BIGINT},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="filename != null">
        filename = #{filename,jdbcType=VARCHAR},
      </if>
      <if test="mimeType != null">
        mime_type = #{mimeType,jdbcType=VARCHAR},
      </if>
      <if test="bucketName != null">
        bucket_name = #{bucketName,jdbcType=VARCHAR},
      </if>
      <if test="storagePath != null">
        storage_path = #{storagePath,jdbcType=VARCHAR},
      </if>
      <if test="storageFile != null">
        storage_file = #{storageFile,jdbcType=VARCHAR},
      </if>
      <if test="sha1 != null">
        sha1 = #{sha1,jdbcType=VARCHAR},
      </if>
      <if test="size != null">
        size = #{size,jdbcType=BIGINT},
      </if>
      <if test="validSince != null">
        valid_since = #{validSince,jdbcType=TIMESTAMP},
      </if>
      <if test="validUntil != null">
        valid_until = #{validUntil,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="storageType != null">
        storage_type = #{storageType,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="ownerNodeId != null">
        owner_node_id = #{ownerNodeId,jdbcType=BIGINT},
      </if>
      <if test="entity != null">
        entity = #{entity,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="equipmentId != null">
        equipment_id = #{equipmentId,jdbcType=BIGINT},
      </if>
      <if test="equipmentEmploymentId != null">
        equipment_employment_id = #{equipmentEmploymentId,jdbcType=BIGINT},
      </if>
      <if test="personId != null">
        person_id = #{personId,jdbcType=BIGINT},
      </if>
      <if test="personEmploymentId != null">
        person_employment_id = #{personEmploymentId,jdbcType=BIGINT},
      </if>
      <if test="antimafiaProcessId != null">
        antimafia_process_id = #{antimafiaProcessId,jdbcType=BIGINT},
      </if>
      <if test="antimafiaProcessPhaseId != null">
        antimafia_process_phase_id = #{antimafiaProcessPhaseId,jdbcType=BIGINT},
      </if>
      <if test="contractId != null">
        contract_id = #{contractId,jdbcType=BIGINT},
      </if>
      <if test="referenceYear != null">
        reference_year = #{referenceYear,jdbcType=VARCHAR},
      </if>
      <if test="referenceMonth != null">
        reference_month = #{referenceMonth,jdbcType=VARCHAR},
      </if>
      <if test="accidentId != null">
        accident_id = #{accidentId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Attachment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    update attachment
    set description = #{description,jdbcType=VARCHAR},
      modified_stamp = #{modifiedStamp,jdbcType=TIMESTAMP},
      created_stamp = #{createdStamp,jdbcType=TIMESTAMP},
      uploaded_stamp = #{uploadedStamp,jdbcType=TIMESTAMP},
      created_by_user_id = #{createdByUserId,jdbcType=BIGINT},
      modified_by_user_id = #{modifiedByUserId,jdbcType=BIGINT},
      uploaded_by_user_id = #{uploadedByUserId,jdbcType=BIGINT},
      type_id = #{typeId,jdbcType=BIGINT},
      filename = #{filename,jdbcType=VARCHAR},
      mime_type = #{mimeType,jdbcType=VARCHAR},
      bucket_name = #{bucketName,jdbcType=VARCHAR},
      storage_path = #{storagePath,jdbcType=VARCHAR},
      storage_file = #{storageFile,jdbcType=VARCHAR},
      sha1 = #{sha1,jdbcType=VARCHAR},
      size = #{size,jdbcType=BIGINT},
      valid_since = #{validSince,jdbcType=TIMESTAMP},
      valid_until = #{validUntil,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      storage_type = #{storageType,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      owner_node_id = #{ownerNodeId,jdbcType=BIGINT},
      entity = #{entity,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      company_id = #{companyId,jdbcType=BIGINT},
      equipment_id = #{equipmentId,jdbcType=BIGINT},
      equipment_employment_id = #{equipmentEmploymentId,jdbcType=BIGINT},
      person_id = #{personId,jdbcType=BIGINT},
      person_employment_id = #{personEmploymentId,jdbcType=BIGINT},
      antimafia_process_id = #{antimafiaProcessId,jdbcType=BIGINT},
      antimafia_process_phase_id = #{antimafiaProcessPhaseId,jdbcType=BIGINT},
      contract_id = #{contractId,jdbcType=BIGINT},
      reference_year = #{referenceYear,jdbcType=VARCHAR},
      reference_month = #{referenceMonth,jdbcType=VARCHAR},
      accident_id = #{accidentId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Alias_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    ${tableAlias}id AS ${fieldAlias}id, ${tableAlias}description AS ${fieldAlias}description, 
    ${tableAlias}modified_stamp AS ${fieldAlias}modified_stamp, ${tableAlias}created_stamp AS ${fieldAlias}created_stamp, 
    ${tableAlias}uploaded_stamp AS ${fieldAlias}uploaded_stamp, ${tableAlias}created_by_user_id AS ${fieldAlias}created_by_user_id, 
    ${tableAlias}modified_by_user_id AS ${fieldAlias}modified_by_user_id, ${tableAlias}uploaded_by_user_id AS ${fieldAlias}uploaded_by_user_id, 
    ${tableAlias}type_id AS ${fieldAlias}type_id, ${tableAlias}filename AS ${fieldAlias}filename, 
    ${tableAlias}mime_type AS ${fieldAlias}mime_type, ${tableAlias}bucket_name AS ${fieldAlias}bucket_name, 
    ${tableAlias}storage_path AS ${fieldAlias}storage_path, ${tableAlias}storage_file AS ${fieldAlias}storage_file, 
    ${tableAlias}sha1 AS ${fieldAlias}sha1, ${tableAlias}size AS ${fieldAlias}size, ${tableAlias}valid_since AS ${fieldAlias}valid_since, 
    ${tableAlias}valid_until AS ${fieldAlias}valid_until, ${tableAlias}status AS ${fieldAlias}status, 
    ${tableAlias}storage_type AS ${fieldAlias}storage_type, ${tableAlias}owner_node_id AS ${fieldAlias}owner_node_id, 
    ${tableAlias}entity AS ${fieldAlias}entity, ${tableAlias}company_id AS ${fieldAlias}company_id, 
    ${tableAlias}equipment_id AS ${fieldAlias}equipment_id, ${tableAlias}equipment_employment_id AS ${fieldAlias}equipment_employment_id, 
    ${tableAlias}person_id AS ${fieldAlias}person_id, ${tableAlias}person_employment_id AS ${fieldAlias}person_employment_id, 
    ${tableAlias}antimafia_process_id AS ${fieldAlias}antimafia_process_id, ${tableAlias}antimafia_process_phase_id AS ${fieldAlias}antimafia_process_phase_id, 
    ${tableAlias}contract_id AS ${fieldAlias}contract_id, ${tableAlias}reference_year AS ${fieldAlias}reference_year, 
    ${tableAlias}reference_month AS ${fieldAlias}reference_month, ${tableAlias}accident_id AS ${fieldAlias}accident_id
  </sql>
  <select id="selectByExampleWithRowbounds" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.AttachmentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 31 18:16:23 CET 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from attachment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>