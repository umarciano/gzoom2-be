<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.NotificationEventMapper">
  <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEvent">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    <id column="event_id" jdbcType="VARCHAR" property="eventId" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
    <id column="notification_group_id" jdbcType="BIGINT" property="notificationGroupId" />
    <result column="enabled" jdbcType="BIT" property="enabled" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="execution_interval" jdbcType="INTEGER" property="executionInterval" />
    <result column="notification_interval" jdbcType="INTEGER" property="notificationInterval" />
    <result column="promise_date" jdbcType="DATE" property="promiseDate" />
    <result column="status" jdbcType="VARCHAR" property="status" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="last_execution_stamp" jdbcType="TIMESTAMP" property="lastExecutionStamp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.eventIdCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.eventIdCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.statusCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    event_id, notification_group_id, enabled, start_date, execution_interval, notification_interval, 
    promise_date, status, message, last_execution_stamp
  </sql>
  <select id="selectByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEventExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEventKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from notification_event
    where event_id = #{eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
      and notification_group_id = #{notificationGroupId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEventKey">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    delete from notification_event
    where event_id = #{eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
      and notification_group_id = #{notificationGroupId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEventExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    delete from notification_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEvent">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    insert into notification_event (event_id, 
      notification_group_id, enabled, start_date, 
      execution_interval, notification_interval, 
      promise_date, status, 
      message, last_execution_stamp)
    values (#{eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
      #{notificationGroupId,jdbcType=BIGINT}, #{enabled,jdbcType=BIT}, #{startDate,jdbcType=DATE}, 
      #{executionInterval,jdbcType=INTEGER}, #{notificationInterval,jdbcType=INTEGER}, 
      #{promiseDate,jdbcType=DATE}, #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
      #{message,jdbcType=VARCHAR}, #{lastExecutionStamp,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEvent">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    insert into notification_event
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        event_id,
      </if>
      <if test="notificationGroupId != null">
        notification_group_id,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="executionInterval != null">
        execution_interval,
      </if>
      <if test="notificationInterval != null">
        notification_interval,
      </if>
      <if test="promiseDate != null">
        promise_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="lastExecutionStamp != null">
        last_execution_stamp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="eventId != null">
        #{eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="notificationGroupId != null">
        #{notificationGroupId,jdbcType=BIGINT},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=BIT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="executionInterval != null">
        #{executionInterval,jdbcType=INTEGER},
      </if>
      <if test="notificationInterval != null">
        #{notificationInterval,jdbcType=INTEGER},
      </if>
      <if test="promiseDate != null">
        #{promiseDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="lastExecutionStamp != null">
        #{lastExecutionStamp,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEventExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    select count(*) from notification_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    update notification_event
    <set>
      <if test="record.eventId != null">
        event_id = #{record.eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="record.notificationGroupId != null">
        notification_group_id = #{record.notificationGroupId,jdbcType=BIGINT},
      </if>
      <if test="record.enabled != null">
        enabled = #{record.enabled,jdbcType=BIT},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.executionInterval != null">
        execution_interval = #{record.executionInterval,jdbcType=INTEGER},
      </if>
      <if test="record.notificationInterval != null">
        notification_interval = #{record.notificationInterval,jdbcType=INTEGER},
      </if>
      <if test="record.promiseDate != null">
        promise_date = #{record.promiseDate,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.lastExecutionStamp != null">
        last_execution_stamp = #{record.lastExecutionStamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    update notification_event
    set event_id = #{record.eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      notification_group_id = #{record.notificationGroupId,jdbcType=BIGINT},
      enabled = #{record.enabled,jdbcType=BIT},
      start_date = #{record.startDate,jdbcType=DATE},
      execution_interval = #{record.executionInterval,jdbcType=INTEGER},
      notification_interval = #{record.notificationInterval,jdbcType=INTEGER},
      promise_date = #{record.promiseDate,jdbcType=DATE},
      status = #{record.status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      message = #{record.message,jdbcType=VARCHAR},
      last_execution_stamp = #{record.lastExecutionStamp,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEvent">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    update notification_event
    <set>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=BIT},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="executionInterval != null">
        execution_interval = #{executionInterval,jdbcType=INTEGER},
      </if>
      <if test="notificationInterval != null">
        notification_interval = #{notificationInterval,jdbcType=INTEGER},
      </if>
      <if test="promiseDate != null">
        promise_date = #{promiseDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="lastExecutionStamp != null">
        last_execution_stamp = #{lastExecutionStamp,jdbcType=TIMESTAMP},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
      and notification_group_id = #{notificationGroupId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEvent">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    update notification_event
    set enabled = #{enabled,jdbcType=BIT},
      start_date = #{startDate,jdbcType=DATE},
      execution_interval = #{executionInterval,jdbcType=INTEGER},
      notification_interval = #{notificationInterval,jdbcType=INTEGER},
      promise_date = #{promiseDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      message = #{message,jdbcType=VARCHAR},
      last_execution_stamp = #{lastExecutionStamp,jdbcType=TIMESTAMP}
    where event_id = #{eventId,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
      and notification_group_id = #{notificationGroupId,jdbcType=BIGINT}
  </update>
  <sql id="Alias_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    ${tableAlias}event_id AS ${fieldAlias}event_id, ${tableAlias}notification_group_id AS ${fieldAlias}notification_group_id, 
    ${tableAlias}enabled AS ${fieldAlias}enabled, ${tableAlias}start_date AS ${fieldAlias}start_date, 
    ${tableAlias}execution_interval AS ${fieldAlias}execution_interval, ${tableAlias}notification_interval AS ${fieldAlias}notification_interval, 
    ${tableAlias}promise_date AS ${fieldAlias}promise_date, ${tableAlias}status AS ${fieldAlias}status, 
    ${tableAlias}message AS ${fieldAlias}message, ${tableAlias}last_execution_stamp AS ${fieldAlias}last_execution_stamp
  </sql>
  <select id="selectByExampleWithRowbounds" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.NotificationEventExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Nov 15 12:38:17 CET 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification_event
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>