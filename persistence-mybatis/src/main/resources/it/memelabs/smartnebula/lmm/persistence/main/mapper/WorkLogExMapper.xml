<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogExMapper">

    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.WorkLogEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogMapper.BaseResultMap">
        <result column="person_count" jdbcType="INTEGER" property="personCount"/>
        <result column="equipment_count" jdbcType="INTEGER" property="equipmentCount"/>
        <result column="company_count" jdbcType="INTEGER" property="companyCount"/>
        <result column="person_external_event_count" jdbcType="INTEGER" property="personExternalEventCount"/>
        <result column="equipment_external_event_count" jdbcType="INTEGER" property="equipmentExternalEventCount"/>
        <association property="state" columnPrefix="state_"
                     javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.EntityState"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.BaseResultMap"/>
        <association property="constructionSite" columnPrefix="construction_site_"
                     javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSite"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.BaseResultMap"/>
    </resultMap>

    <resultMap id="CompanyEmplResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.CompanyEmployment">
        <id column="company_id" jdbcType="BIGINT" property="companyId"/>
        <id column="empl_id" jdbcType="BIGINT" property="emplId"/>
    </resultMap>

    <sql id="Select_Joined_Column_List">
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogMapper.Alias_Column_List">
            <property name="tableAlias" value="WL."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.Alias_Column_List">
            <property name="tableAlias" value="ES."/>
            <property name="fieldAlias" value="state_"/>
        </include>
        ,
        <include
                refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="CS."/>
            <property name="fieldAlias" value="construction_site_"/>
        </include>
    </sql>

    <sql id="Select_Joined_Tables">
        left join entity_state ES on WL.state_id = ES.id
        left join construction_site CS on WL.construction_site_id = CS.id
    </sql>


    <sql id="Select_Joined_Person_Count">
        (select count(DISTINCT E.person_empl_id) from work_log_person_event E where E.work_log_id=WL.id ) as person_count
    </sql>
    <sql id="Select_Joined_Equipment_Count">
        (select count(DISTINCT E.equipment_empl_id) from work_log_equipment_event E where E.work_log_id=WL.id ) as equipment_count
    </sql>
    <sql id="Select_Joined_Company_Count">
        (select count(1) from (
        select DISTINCT pe.company_id from work_log_person_event wp inner join person_employment pe on wp.person_empl_id=pe.id
        where wp.work_log_id=WL.id
        union
        select DISTINCT ee.company_id from work_log_equipment_event we
        inner join equipment_employment ee on we.equipment_empl_id=ee.id where we.work_log_id= WL.id
        ) as empls ) as company_count
    </sql>

    <sql id="Select_Joined_Person_Event_Count">
        (select count(1) from work_log_person_event E where E.work_log_id=WL.id AND E.origin='EXTERNAL' ) as person_external_event_count
    </sql>
    <sql id="Select_Joined_Equipment_Event_Count">
        (select count(1) from work_log_equipment_event E where E.work_log_id=WL.id AND E.origin='EXTERNAL') as equipment_external_event_count
    </sql>

    <select id="selectExByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Select_Joined_Column_List"/>
        from work_log WL
        <include refid="Select_Joined_Tables"/>
        where WL.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectExByExampleWithRowbounds"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.WorkLogExExample" resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Select_Joined_Column_List"/>
        ,
        <include refid="Select_Joined_Person_Count"/>
        ,
        <include refid="Select_Joined_Equipment_Count"/>
        ,
        <include refid="Select_Joined_Company_Count"/>
        ,
        <include refid="Select_Joined_Person_Event_Count"/>
        ,
        <include refid="Select_Joined_Equipment_Event_Count"/>
        from work_log WL
        <include refid="Select_Joined_Tables"/>

        <if test="companyId!=null">
            left join work_log_person_event WLP on WLP.work_log_id = WL.id
            left join person_employment WLPE on WLPE.id=WLP.person_empl_id
            left join work_log_equipment_event WLE on WLE.work_log_id = WL.id
            left join equipment_employment WLEE on WLEE.id=WLE.equipment_empl_id
        </if>
        <where>
            <if test="stateTag!=null">
                AND
                ES.tag = #{stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
            <if test="companyId!=null">
                AND
                WLPE.company_id = #{companyId,jdbcType=BIGINT}
                OR
                WLEE.company_id = #{companyId,jdbcType=BIGINT}
            </if>
        </where>
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogMapper.Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="countExByExample"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.WorkLogExExample"
            resultType="java.lang.Integer">
        select count(*) from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Select_Joined_Column_List"/>
        from work_log WL
        <include refid="Select_Joined_Tables"/>
        <if test="companyId!=null">
            left join work_log_person_event WLP on WLP.work_log_id = WL.id
            left join person_employment WLPE on WLPE.id=WLP.person_empl_id
            left join work_log_equipment_event WLE on WLE.work_log_id = WL.id
            left join equipment_employment WLEE on WLEE.id=WLE.equipment_empl_id
        </if>
        <where>
            <if test="stateTag!=null">
                AND
                ES.tag = #{stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
            </if>
            <if test="companyId!=null">
                AND
                WLPE.company_id = #{companyId,jdbcType=BIGINT}
                OR
                WLEE.company_id = #{companyId,jdbcType=BIGINT}
            </if>
        </where>
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogMapper.Example_Where_Clause"/>
        </if>
    </select>

    <select id="selectCompanyPersonEmpl" parameterType="java.lang.Long" resultMap="CompanyEmplResultMap">
        select DISTINCT pe.company_id, wp.person_empl_id as empl_id
        from work_log_person_event wp
        inner join person_employment pe on wp.person_empl_id=pe.id
        where
        wp.work_log_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectCompanyEquipmentEmpl" parameterType="java.lang.Long" resultMap="CompanyEmplResultMap">
        select DISTINCT ee.company_id, we.equipment_empl_id as empl_id
        from work_log_equipment_event we
        inner join equipment_employment ee on
        we.equipment_empl_id=ee.id
        where we.work_log_id = #{id,jdbcType=BIGINT}
    </select>

    <select id="validatePersonEmployment" resultType="long">
        select DISTINCT wp.person_empl_id from work_log_person_event wp
        left join person_employment pe on wp.person_empl_id = pe.id
        left join company co on pe.company_id = co.id
        where wp.work_log_id = #{id,jdbcType=BIGINT}
        and not (
        pe.start_date &lt;= to_date(#{logDate}, 'YYYY-MM-DD')
        and (pe.end_date IS NULL OR pe.end_date >= to_date(#{logDate}, 'YYYY-MM-DD'))
        and pe.state_tag = 'AUTHORIZED'
        and co.state_tag = 'AUTHORIZED'
        )
    </select>

    <select id="validateEquipmentEmployment" resultType="long">
        select DISTINCT wp.equipment_empl_id from work_log_equipment_event wp
        left join equipment_employment ee on wp.equipment_empl_id= ee.id
        left join company co on ee.company_id = co.id
        where wp.work_log_id = #{id,jdbcType=BIGINT}
        and not (
        ee.start_date &lt;= to_date(#{logDate}, 'YYYY-MM-DD')
        and (ee.end_date IS NULL OR ee.end_date >= to_date(#{logDate}, 'YYYY-MM-DD'))
        and ee.state_tag = 'AUTHORIZED'
        and co.state_tag = 'AUTHORIZED'
        )
    </select>

    <select id="countEventsByWorkLogId" resultType="java.util.Map">
        select sum(t.persons) as persons, sum(t.equipments) as equipments, t.business_name, t.company_id from (

           select count(distinct PE.id) as persons, 0 as equipments , CO.business_name, CO.id as company_id
           from work_log_person_event EV join person_employment PE on PE.id=EV.person_empl_id join company CO on CO.id=PE.company_id
           where EV.work_log_id = #{id,jdbcType=BIGINT} and EV.state_tag = 'VALIDATED'
           group by CO.id
        union
           select 0 as persons, count( distinct EE.id) as equipments,CO.business_name, CO.id as company_id
           from work_log_equipment_event EV join equipment_employment EE on EE.id=EV.equipment_empl_id join company CO on CO.id=EE.company_id
           where EV.work_log_id = #{id,jdbcType=BIGINT} and EV.state_tag = 'VALIDATED'
           group by CO.id

        ) t  group by t.company_id, t.business_name order by t.business_name ASC

    </select>

    <select id="selectByConstructionSiteLogId"
            resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogMapper.BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.WorkLogMapper.Alias_Column_List">
            <property name="tableAlias" value="WL."/>
            <property name="fieldAlias" value=""/>
        </include>
        from construction_site_log CSL , work_log WL
        where
        WL.log_date=CSL.log_date
        and WL.construction_site_id=CSL.construction_site_id
        and CSL.id = #{constructionSiteLogId,jdbcType=BIGINT}
    </select>

</mapper>
