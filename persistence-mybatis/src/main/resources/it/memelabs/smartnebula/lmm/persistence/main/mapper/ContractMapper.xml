<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.ContractMapper">
  <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.Contract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contract_number" jdbcType="VARCHAR" property="contractNumber" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="created_stamp" jdbcType="TIMESTAMP" property="createdStamp" />
    <result column="modified_stamp" jdbcType="TIMESTAMP" property="modifiedStamp" />
    <result column="created_by_user_id" jdbcType="BIGINT" property="createdByUserId" />
    <result column="modified_by_user_id" jdbcType="BIGINT" property="modifiedByUserId" />
    <result column="owner_node_id" jdbcType="BIGINT" property="ownerNodeId" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="performing_company_id" jdbcType="BIGINT" property="performingCompanyId" />
    <result column="reference_contract_id" jdbcType="BIGINT" property="referenceContractId" />
    <result column="antimafia_process_id" jdbcType="BIGINT" property="antimafiaProcessId" />
    <result column="contract_type_id" jdbcType="BIGINT" property="contractTypeId" />
    <result column="authorized_amount" jdbcType="NUMERIC" property="authorizedAmount" />
    <result column="contract_amount" jdbcType="NUMERIC" property="contractAmount" />
    <result column="main_category" jdbcType="VARCHAR" property="mainCategory" />
    <result column="customer_authorization" jdbcType="BIT" property="customerAuthorization" />
    <result column="subcontract_aut_number" jdbcType="VARCHAR" property="subcontractAutNumber" />
    <result column="doc_subcontract_auth_date" jdbcType="DATE" property="docSubcontractAuthDate" />
    <result column="lot_id" jdbcType="BIGINT" property="lotId" />
    <result column="signing_date" jdbcType="DATE" property="signingDate" />
    <result column="revocation_date" jdbcType="DATE" property="revocationDate" />
    <result column="contract_extension_id" jdbcType="BIGINT" property="contractExtensionId" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="state_id" jdbcType="BIGINT" property="stateId" />
    <result column="unique_code" jdbcType="VARCHAR" property="uniqueCode" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="company_bank" jdbcType="VARCHAR" property="companyBank" />
    <result column="letter_of_indemnity" jdbcType="BIT" property="letterOfIndemnity" />
    <result column="letter_of_indemnity_delivery_date" jdbcType="DATE" property="letterOfIndemnityDeliveryDate" />
    <result column="company_iban" jdbcType="VARCHAR" property="companyIban" />
    <result column="subject_to_mgo" jdbcType="BIT" property="subjectToMgo" />
    <result column="internal_contract_number" jdbcType="BIGINT" property="internalContractNumber" />
    <result column="modified_state_stamp" jdbcType="TIMESTAMP" property="modifiedStateStamp" />
    <result column="state_tag" jdbcType="VARCHAR" property="stateTag" typeHandler="org.apache.ibatis.type.EnumTypeHandler" />
    <result column="contract_authorization_id" jdbcType="BIGINT" property="contractAuthorizationId" />
    <result column="contract_commitment_mode_id" jdbcType="BIGINT" property="contractCommitmentModeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.stateTagCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.stateTagCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.apache.ibatis.type.EnumTypeHandler} and #{criterion.secondValue,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.apache.ibatis.type.EnumTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    id, contract_number, description, created_stamp, modified_stamp, created_by_user_id, 
    modified_by_user_id, owner_node_id, company_id, performing_company_id, reference_contract_id, 
    antimafia_process_id, contract_type_id, authorized_amount, contract_amount, main_category, 
    customer_authorization, subcontract_aut_number, doc_subcontract_auth_date, lot_id, 
    signing_date, revocation_date, contract_extension_id, note, state_id, unique_code, 
    start_date, end_date, company_bank, letter_of_indemnity, letter_of_indemnity_delivery_date, 
    company_iban, subject_to_mgo, internal_contract_number, modified_state_stamp, state_tag, 
    contract_authorization_id, contract_commitment_mode_id
  </sql>
  <select id="selectByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.ContractExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from contract
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    delete from contract
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.ContractExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    delete from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Contract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('contract_id_seq')
    </selectKey>
    insert into contract (id, contract_number, description, 
      created_stamp, modified_stamp, created_by_user_id, 
      modified_by_user_id, owner_node_id, company_id, 
      performing_company_id, reference_contract_id, 
      antimafia_process_id, contract_type_id, authorized_amount, 
      contract_amount, main_category, customer_authorization, 
      subcontract_aut_number, doc_subcontract_auth_date, 
      lot_id, signing_date, revocation_date, 
      contract_extension_id, note, state_id, 
      unique_code, start_date, end_date, 
      company_bank, letter_of_indemnity, letter_of_indemnity_delivery_date, 
      company_iban, subject_to_mgo, internal_contract_number, 
      modified_state_stamp, state_tag, 
      contract_authorization_id, contract_commitment_mode_id
      )
    values (#{id,jdbcType=BIGINT}, #{contractNumber,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createdStamp,jdbcType=TIMESTAMP}, #{modifiedStamp,jdbcType=TIMESTAMP}, #{createdByUserId,jdbcType=BIGINT}, 
      #{modifiedByUserId,jdbcType=BIGINT}, #{ownerNodeId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, 
      #{performingCompanyId,jdbcType=BIGINT}, #{referenceContractId,jdbcType=BIGINT}, 
      #{antimafiaProcessId,jdbcType=BIGINT}, #{contractTypeId,jdbcType=BIGINT}, #{authorizedAmount,jdbcType=NUMERIC}, 
      #{contractAmount,jdbcType=NUMERIC}, #{mainCategory,jdbcType=VARCHAR}, #{customerAuthorization,jdbcType=BIT}, 
      #{subcontractAutNumber,jdbcType=VARCHAR}, #{docSubcontractAuthDate,jdbcType=DATE}, 
      #{lotId,jdbcType=BIGINT}, #{signingDate,jdbcType=DATE}, #{revocationDate,jdbcType=DATE}, 
      #{contractExtensionId,jdbcType=BIGINT}, #{note,jdbcType=VARCHAR}, #{stateId,jdbcType=BIGINT}, 
      #{uniqueCode,jdbcType=VARCHAR}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{companyBank,jdbcType=VARCHAR}, #{letterOfIndemnity,jdbcType=BIT}, #{letterOfIndemnityDeliveryDate,jdbcType=DATE}, 
      #{companyIban,jdbcType=VARCHAR}, #{subjectToMgo,jdbcType=BIT}, #{internalContractNumber,jdbcType=BIGINT}, 
      #{modifiedStateStamp,jdbcType=TIMESTAMP}, #{stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler}, 
      #{contractAuthorizationId,jdbcType=BIGINT}, #{contractCommitmentModeId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Contract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT nextval('contract_id_seq')
    </selectKey>
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="contractNumber != null">
        contract_number,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createdStamp != null">
        created_stamp,
      </if>
      <if test="modifiedStamp != null">
        modified_stamp,
      </if>
      <if test="createdByUserId != null">
        created_by_user_id,
      </if>
      <if test="modifiedByUserId != null">
        modified_by_user_id,
      </if>
      <if test="ownerNodeId != null">
        owner_node_id,
      </if>
      <if test="companyId != null">
        company_id,
      </if>
      <if test="performingCompanyId != null">
        performing_company_id,
      </if>
      <if test="referenceContractId != null">
        reference_contract_id,
      </if>
      <if test="antimafiaProcessId != null">
        antimafia_process_id,
      </if>
      <if test="contractTypeId != null">
        contract_type_id,
      </if>
      <if test="authorizedAmount != null">
        authorized_amount,
      </if>
      <if test="contractAmount != null">
        contract_amount,
      </if>
      <if test="mainCategory != null">
        main_category,
      </if>
      <if test="customerAuthorization != null">
        customer_authorization,
      </if>
      <if test="subcontractAutNumber != null">
        subcontract_aut_number,
      </if>
      <if test="docSubcontractAuthDate != null">
        doc_subcontract_auth_date,
      </if>
      <if test="lotId != null">
        lot_id,
      </if>
      <if test="signingDate != null">
        signing_date,
      </if>
      <if test="revocationDate != null">
        revocation_date,
      </if>
      <if test="contractExtensionId != null">
        contract_extension_id,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="stateId != null">
        state_id,
      </if>
      <if test="uniqueCode != null">
        unique_code,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="companyBank != null">
        company_bank,
      </if>
      <if test="letterOfIndemnity != null">
        letter_of_indemnity,
      </if>
      <if test="letterOfIndemnityDeliveryDate != null">
        letter_of_indemnity_delivery_date,
      </if>
      <if test="companyIban != null">
        company_iban,
      </if>
      <if test="subjectToMgo != null">
        subject_to_mgo,
      </if>
      <if test="internalContractNumber != null">
        internal_contract_number,
      </if>
      <if test="modifiedStateStamp != null">
        modified_state_stamp,
      </if>
      <if test="stateTag != null">
        state_tag,
      </if>
      <if test="contractAuthorizationId != null">
        contract_authorization_id,
      </if>
      <if test="contractCommitmentModeId != null">
        contract_commitment_mode_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="contractNumber != null">
        #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdStamp != null">
        #{createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedStamp != null">
        #{modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByUserId != null">
        #{createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedByUserId != null">
        #{modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="ownerNodeId != null">
        #{ownerNodeId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="performingCompanyId != null">
        #{performingCompanyId,jdbcType=BIGINT},
      </if>
      <if test="referenceContractId != null">
        #{referenceContractId,jdbcType=BIGINT},
      </if>
      <if test="antimafiaProcessId != null">
        #{antimafiaProcessId,jdbcType=BIGINT},
      </if>
      <if test="contractTypeId != null">
        #{contractTypeId,jdbcType=BIGINT},
      </if>
      <if test="authorizedAmount != null">
        #{authorizedAmount,jdbcType=NUMERIC},
      </if>
      <if test="contractAmount != null">
        #{contractAmount,jdbcType=NUMERIC},
      </if>
      <if test="mainCategory != null">
        #{mainCategory,jdbcType=VARCHAR},
      </if>
      <if test="customerAuthorization != null">
        #{customerAuthorization,jdbcType=BIT},
      </if>
      <if test="subcontractAutNumber != null">
        #{subcontractAutNumber,jdbcType=VARCHAR},
      </if>
      <if test="docSubcontractAuthDate != null">
        #{docSubcontractAuthDate,jdbcType=DATE},
      </if>
      <if test="lotId != null">
        #{lotId,jdbcType=BIGINT},
      </if>
      <if test="signingDate != null">
        #{signingDate,jdbcType=DATE},
      </if>
      <if test="revocationDate != null">
        #{revocationDate,jdbcType=DATE},
      </if>
      <if test="contractExtensionId != null">
        #{contractExtensionId,jdbcType=BIGINT},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="stateId != null">
        #{stateId,jdbcType=BIGINT},
      </if>
      <if test="uniqueCode != null">
        #{uniqueCode,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="companyBank != null">
        #{companyBank,jdbcType=VARCHAR},
      </if>
      <if test="letterOfIndemnity != null">
        #{letterOfIndemnity,jdbcType=BIT},
      </if>
      <if test="letterOfIndemnityDeliveryDate != null">
        #{letterOfIndemnityDeliveryDate,jdbcType=DATE},
      </if>
      <if test="companyIban != null">
        #{companyIban,jdbcType=VARCHAR},
      </if>
      <if test="subjectToMgo != null">
        #{subjectToMgo,jdbcType=BIT},
      </if>
      <if test="internalContractNumber != null">
        #{internalContractNumber,jdbcType=BIGINT},
      </if>
      <if test="modifiedStateStamp != null">
        #{modifiedStateStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="stateTag != null">
        #{stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="contractAuthorizationId != null">
        #{contractAuthorizationId,jdbcType=BIGINT},
      </if>
      <if test="contractCommitmentModeId != null">
        #{contractCommitmentModeId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.ContractExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    select count(*) from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    update contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.contractNumber != null">
        contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createdStamp != null">
        created_stamp = #{record.createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifiedStamp != null">
        modified_stamp = #{record.modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdByUserId != null">
        created_by_user_id = #{record.createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedByUserId != null">
        modified_by_user_id = #{record.modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.ownerNodeId != null">
        owner_node_id = #{record.ownerNodeId,jdbcType=BIGINT},
      </if>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=BIGINT},
      </if>
      <if test="record.performingCompanyId != null">
        performing_company_id = #{record.performingCompanyId,jdbcType=BIGINT},
      </if>
      <if test="record.referenceContractId != null">
        reference_contract_id = #{record.referenceContractId,jdbcType=BIGINT},
      </if>
      <if test="record.antimafiaProcessId != null">
        antimafia_process_id = #{record.antimafiaProcessId,jdbcType=BIGINT},
      </if>
      <if test="record.contractTypeId != null">
        contract_type_id = #{record.contractTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.authorizedAmount != null">
        authorized_amount = #{record.authorizedAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.contractAmount != null">
        contract_amount = #{record.contractAmount,jdbcType=NUMERIC},
      </if>
      <if test="record.mainCategory != null">
        main_category = #{record.mainCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.customerAuthorization != null">
        customer_authorization = #{record.customerAuthorization,jdbcType=BIT},
      </if>
      <if test="record.subcontractAutNumber != null">
        subcontract_aut_number = #{record.subcontractAutNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.docSubcontractAuthDate != null">
        doc_subcontract_auth_date = #{record.docSubcontractAuthDate,jdbcType=DATE},
      </if>
      <if test="record.lotId != null">
        lot_id = #{record.lotId,jdbcType=BIGINT},
      </if>
      <if test="record.signingDate != null">
        signing_date = #{record.signingDate,jdbcType=DATE},
      </if>
      <if test="record.revocationDate != null">
        revocation_date = #{record.revocationDate,jdbcType=DATE},
      </if>
      <if test="record.contractExtensionId != null">
        contract_extension_id = #{record.contractExtensionId,jdbcType=BIGINT},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.stateId != null">
        state_id = #{record.stateId,jdbcType=BIGINT},
      </if>
      <if test="record.uniqueCode != null">
        unique_code = #{record.uniqueCode,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.companyBank != null">
        company_bank = #{record.companyBank,jdbcType=VARCHAR},
      </if>
      <if test="record.letterOfIndemnity != null">
        letter_of_indemnity = #{record.letterOfIndemnity,jdbcType=BIT},
      </if>
      <if test="record.letterOfIndemnityDeliveryDate != null">
        letter_of_indemnity_delivery_date = #{record.letterOfIndemnityDeliveryDate,jdbcType=DATE},
      </if>
      <if test="record.companyIban != null">
        company_iban = #{record.companyIban,jdbcType=VARCHAR},
      </if>
      <if test="record.subjectToMgo != null">
        subject_to_mgo = #{record.subjectToMgo,jdbcType=BIT},
      </if>
      <if test="record.internalContractNumber != null">
        internal_contract_number = #{record.internalContractNumber,jdbcType=BIGINT},
      </if>
      <if test="record.modifiedStateStamp != null">
        modified_state_stamp = #{record.modifiedStateStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stateTag != null">
        state_tag = #{record.stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="record.contractAuthorizationId != null">
        contract_authorization_id = #{record.contractAuthorizationId,jdbcType=BIGINT},
      </if>
      <if test="record.contractCommitmentModeId != null">
        contract_commitment_mode_id = #{record.contractCommitmentModeId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    update contract
    set id = #{record.id,jdbcType=BIGINT},
      contract_number = #{record.contractNumber,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      created_stamp = #{record.createdStamp,jdbcType=TIMESTAMP},
      modified_stamp = #{record.modifiedStamp,jdbcType=TIMESTAMP},
      created_by_user_id = #{record.createdByUserId,jdbcType=BIGINT},
      modified_by_user_id = #{record.modifiedByUserId,jdbcType=BIGINT},
      owner_node_id = #{record.ownerNodeId,jdbcType=BIGINT},
      company_id = #{record.companyId,jdbcType=BIGINT},
      performing_company_id = #{record.performingCompanyId,jdbcType=BIGINT},
      reference_contract_id = #{record.referenceContractId,jdbcType=BIGINT},
      antimafia_process_id = #{record.antimafiaProcessId,jdbcType=BIGINT},
      contract_type_id = #{record.contractTypeId,jdbcType=BIGINT},
      authorized_amount = #{record.authorizedAmount,jdbcType=NUMERIC},
      contract_amount = #{record.contractAmount,jdbcType=NUMERIC},
      main_category = #{record.mainCategory,jdbcType=VARCHAR},
      customer_authorization = #{record.customerAuthorization,jdbcType=BIT},
      subcontract_aut_number = #{record.subcontractAutNumber,jdbcType=VARCHAR},
      doc_subcontract_auth_date = #{record.docSubcontractAuthDate,jdbcType=DATE},
      lot_id = #{record.lotId,jdbcType=BIGINT},
      signing_date = #{record.signingDate,jdbcType=DATE},
      revocation_date = #{record.revocationDate,jdbcType=DATE},
      contract_extension_id = #{record.contractExtensionId,jdbcType=BIGINT},
      note = #{record.note,jdbcType=VARCHAR},
      state_id = #{record.stateId,jdbcType=BIGINT},
      unique_code = #{record.uniqueCode,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      company_bank = #{record.companyBank,jdbcType=VARCHAR},
      letter_of_indemnity = #{record.letterOfIndemnity,jdbcType=BIT},
      letter_of_indemnity_delivery_date = #{record.letterOfIndemnityDeliveryDate,jdbcType=DATE},
      company_iban = #{record.companyIban,jdbcType=VARCHAR},
      subject_to_mgo = #{record.subjectToMgo,jdbcType=BIT},
      internal_contract_number = #{record.internalContractNumber,jdbcType=BIGINT},
      modified_state_stamp = #{record.modifiedStateStamp,jdbcType=TIMESTAMP},
      state_tag = #{record.stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      contract_authorization_id = #{record.contractAuthorizationId,jdbcType=BIGINT},
      contract_commitment_mode_id = #{record.contractCommitmentModeId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Contract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    update contract
    <set>
      <if test="contractNumber != null">
        contract_number = #{contractNumber,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createdStamp != null">
        created_stamp = #{createdStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedStamp != null">
        modified_stamp = #{modifiedStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createdByUserId != null">
        created_by_user_id = #{createdByUserId,jdbcType=BIGINT},
      </if>
      <if test="modifiedByUserId != null">
        modified_by_user_id = #{modifiedByUserId,jdbcType=BIGINT},
      </if>
      <if test="ownerNodeId != null">
        owner_node_id = #{ownerNodeId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null">
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="performingCompanyId != null">
        performing_company_id = #{performingCompanyId,jdbcType=BIGINT},
      </if>
      <if test="referenceContractId != null">
        reference_contract_id = #{referenceContractId,jdbcType=BIGINT},
      </if>
      <if test="antimafiaProcessId != null">
        antimafia_process_id = #{antimafiaProcessId,jdbcType=BIGINT},
      </if>
      <if test="contractTypeId != null">
        contract_type_id = #{contractTypeId,jdbcType=BIGINT},
      </if>
      <if test="authorizedAmount != null">
        authorized_amount = #{authorizedAmount,jdbcType=NUMERIC},
      </if>
      <if test="contractAmount != null">
        contract_amount = #{contractAmount,jdbcType=NUMERIC},
      </if>
      <if test="mainCategory != null">
        main_category = #{mainCategory,jdbcType=VARCHAR},
      </if>
      <if test="customerAuthorization != null">
        customer_authorization = #{customerAuthorization,jdbcType=BIT},
      </if>
      <if test="subcontractAutNumber != null">
        subcontract_aut_number = #{subcontractAutNumber,jdbcType=VARCHAR},
      </if>
      <if test="docSubcontractAuthDate != null">
        doc_subcontract_auth_date = #{docSubcontractAuthDate,jdbcType=DATE},
      </if>
      <if test="lotId != null">
        lot_id = #{lotId,jdbcType=BIGINT},
      </if>
      <if test="signingDate != null">
        signing_date = #{signingDate,jdbcType=DATE},
      </if>
      <if test="revocationDate != null">
        revocation_date = #{revocationDate,jdbcType=DATE},
      </if>
      <if test="contractExtensionId != null">
        contract_extension_id = #{contractExtensionId,jdbcType=BIGINT},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="stateId != null">
        state_id = #{stateId,jdbcType=BIGINT},
      </if>
      <if test="uniqueCode != null">
        unique_code = #{uniqueCode,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="companyBank != null">
        company_bank = #{companyBank,jdbcType=VARCHAR},
      </if>
      <if test="letterOfIndemnity != null">
        letter_of_indemnity = #{letterOfIndemnity,jdbcType=BIT},
      </if>
      <if test="letterOfIndemnityDeliveryDate != null">
        letter_of_indemnity_delivery_date = #{letterOfIndemnityDeliveryDate,jdbcType=DATE},
      </if>
      <if test="companyIban != null">
        company_iban = #{companyIban,jdbcType=VARCHAR},
      </if>
      <if test="subjectToMgo != null">
        subject_to_mgo = #{subjectToMgo,jdbcType=BIT},
      </if>
      <if test="internalContractNumber != null">
        internal_contract_number = #{internalContractNumber,jdbcType=BIGINT},
      </if>
      <if test="modifiedStateStamp != null">
        modified_state_stamp = #{modifiedStateStamp,jdbcType=TIMESTAMP},
      </if>
      <if test="stateTag != null">
        state_tag = #{stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      </if>
      <if test="contractAuthorizationId != null">
        contract_authorization_id = #{contractAuthorizationId,jdbcType=BIGINT},
      </if>
      <if test="contractCommitmentModeId != null">
        contract_commitment_mode_id = #{contractCommitmentModeId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.Contract">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    update contract
    set contract_number = #{contractNumber,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      created_stamp = #{createdStamp,jdbcType=TIMESTAMP},
      modified_stamp = #{modifiedStamp,jdbcType=TIMESTAMP},
      created_by_user_id = #{createdByUserId,jdbcType=BIGINT},
      modified_by_user_id = #{modifiedByUserId,jdbcType=BIGINT},
      owner_node_id = #{ownerNodeId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      performing_company_id = #{performingCompanyId,jdbcType=BIGINT},
      reference_contract_id = #{referenceContractId,jdbcType=BIGINT},
      antimafia_process_id = #{antimafiaProcessId,jdbcType=BIGINT},
      contract_type_id = #{contractTypeId,jdbcType=BIGINT},
      authorized_amount = #{authorizedAmount,jdbcType=NUMERIC},
      contract_amount = #{contractAmount,jdbcType=NUMERIC},
      main_category = #{mainCategory,jdbcType=VARCHAR},
      customer_authorization = #{customerAuthorization,jdbcType=BIT},
      subcontract_aut_number = #{subcontractAutNumber,jdbcType=VARCHAR},
      doc_subcontract_auth_date = #{docSubcontractAuthDate,jdbcType=DATE},
      lot_id = #{lotId,jdbcType=BIGINT},
      signing_date = #{signingDate,jdbcType=DATE},
      revocation_date = #{revocationDate,jdbcType=DATE},
      contract_extension_id = #{contractExtensionId,jdbcType=BIGINT},
      note = #{note,jdbcType=VARCHAR},
      state_id = #{stateId,jdbcType=BIGINT},
      unique_code = #{uniqueCode,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      company_bank = #{companyBank,jdbcType=VARCHAR},
      letter_of_indemnity = #{letterOfIndemnity,jdbcType=BIT},
      letter_of_indemnity_delivery_date = #{letterOfIndemnityDeliveryDate,jdbcType=DATE},
      company_iban = #{companyIban,jdbcType=VARCHAR},
      subject_to_mgo = #{subjectToMgo,jdbcType=BIT},
      internal_contract_number = #{internalContractNumber,jdbcType=BIGINT},
      modified_state_stamp = #{modifiedStateStamp,jdbcType=TIMESTAMP},
      state_tag = #{stateTag,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.EnumTypeHandler},
      contract_authorization_id = #{contractAuthorizationId,jdbcType=BIGINT},
      contract_commitment_mode_id = #{contractCommitmentModeId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <sql id="Alias_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    ${tableAlias}id AS ${fieldAlias}id, ${tableAlias}contract_number AS ${fieldAlias}contract_number, 
    ${tableAlias}description AS ${fieldAlias}description, ${tableAlias}created_stamp AS ${fieldAlias}created_stamp, 
    ${tableAlias}modified_stamp AS ${fieldAlias}modified_stamp, ${tableAlias}created_by_user_id AS ${fieldAlias}created_by_user_id, 
    ${tableAlias}modified_by_user_id AS ${fieldAlias}modified_by_user_id, ${tableAlias}owner_node_id AS ${fieldAlias}owner_node_id, 
    ${tableAlias}company_id AS ${fieldAlias}company_id, ${tableAlias}performing_company_id AS ${fieldAlias}performing_company_id, 
    ${tableAlias}reference_contract_id AS ${fieldAlias}reference_contract_id, ${tableAlias}antimafia_process_id AS ${fieldAlias}antimafia_process_id, 
    ${tableAlias}contract_type_id AS ${fieldAlias}contract_type_id, ${tableAlias}authorized_amount AS ${fieldAlias}authorized_amount, 
    ${tableAlias}contract_amount AS ${fieldAlias}contract_amount, ${tableAlias}main_category AS ${fieldAlias}main_category, 
    ${tableAlias}customer_authorization AS ${fieldAlias}customer_authorization, ${tableAlias}subcontract_aut_number AS ${fieldAlias}subcontract_aut_number, 
    ${tableAlias}doc_subcontract_auth_date AS ${fieldAlias}doc_subcontract_auth_date, 
    ${tableAlias}lot_id AS ${fieldAlias}lot_id, ${tableAlias}signing_date AS ${fieldAlias}signing_date, 
    ${tableAlias}revocation_date AS ${fieldAlias}revocation_date, ${tableAlias}contract_extension_id AS ${fieldAlias}contract_extension_id, 
    ${tableAlias}note AS ${fieldAlias}note, ${tableAlias}state_id AS ${fieldAlias}state_id, 
    ${tableAlias}unique_code AS ${fieldAlias}unique_code, ${tableAlias}start_date AS ${fieldAlias}start_date, 
    ${tableAlias}end_date AS ${fieldAlias}end_date, ${tableAlias}company_bank AS ${fieldAlias}company_bank, 
    ${tableAlias}letter_of_indemnity AS ${fieldAlias}letter_of_indemnity, ${tableAlias}letter_of_indemnity_delivery_date AS ${fieldAlias}letter_of_indemnity_delivery_date, 
    ${tableAlias}company_iban AS ${fieldAlias}company_iban, ${tableAlias}subject_to_mgo AS ${fieldAlias}subject_to_mgo, 
    ${tableAlias}internal_contract_number AS ${fieldAlias}internal_contract_number, ${tableAlias}modified_state_stamp AS ${fieldAlias}modified_state_stamp, 
    ${tableAlias}state_tag AS ${fieldAlias}state_tag, ${tableAlias}contract_authorization_id AS ${fieldAlias}contract_authorization_id, 
    ${tableAlias}contract_commitment_mode_id AS ${fieldAlias}contract_commitment_mode_id
  </sql>
  <select id="selectByExampleWithRowbounds" parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.ContractExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Dec 05 15:22:54 CET 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>