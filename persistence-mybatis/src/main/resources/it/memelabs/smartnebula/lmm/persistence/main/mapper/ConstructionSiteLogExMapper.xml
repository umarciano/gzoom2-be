<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogExMapper">


    <resultMap id="BaseResultMap" type="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSiteLogEx"
               extends="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogMapper.BaseResultMap">
        <association property="state" columnPrefix="state_" resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateMapper.BaseResultMap" />
		<association property="constructionSite" javaType="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSite"
                     resultMap="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.BaseResultMap"
                     columnPrefix="cs_"/>
    </resultMap>

    <sql id="Min_Alias_Column_List">
            ${tableAlias}id AS ${fieldAlias}id,
            ${tableAlias}log_date AS ${fieldAlias}log_date,
            ${tableAlias}construction_site_id AS ${fieldAlias}construction_site_id
    </sql>

    <select id="selectByPrimaryKeyEx" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select        
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogMapper.Alias_Column_List">
            <property name="tableAlias" value="csl."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value="cs_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="state."/>
            <property name="fieldAlias" value="state_"/>
        </include>
        from construction_site_log csl
        left join construction_site cs on csl.construction_site_id = cs.id
        left join entity_state state on csl.state_id=state.id
		where csl.id = #{id,jdbcType=BIGINT}
    </select>
    
    <select id="selectByFilterWithRowboundsEx"
            parameterType="it.memelabs.smartnebula.lmm.persistence.main.dto.ConstructionSiteExExample" resultMap="BaseResultMap">
        select * from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogMapper.Alias_Column_List">
            <property name="tableAlias" value="csl."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value="cs_"/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.EntityStateExMapper.Min_Alias_Column_List">
            <property name="tableAlias" value="state."/>
            <property name="fieldAlias" value="state_"/>
        </include>
        from construction_site_log csl
        left join construction_site cs on csl.construction_site_id = cs.id
        left join entity_state state on csl.state_id=state.id
		) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogMapper.Example_Where_Clause"/>
        </if> 
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>        
    </select>
    
    <select id="countByFilterEx" resultType="java.lang.Integer">
        select count(*) from (
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogMapper.Alias_Column_List">
            <property name="tableAlias" value="csl."/>
            <property name="fieldAlias" value=""/>
        </include>
        ,
        <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteMapper.Alias_Column_List">
            <property name="tableAlias" value="cs."/>
            <property name="fieldAlias" value="cs_"/>
        </include>
        from construction_site_log csl
        left join construction_site cs on csl.construction_site_id = cs.id
        ) t
        <if test="_parameter != null">
            <include refid="it.memelabs.smartnebula.lmm.persistence.main.mapper.ConstructionSiteLogMapper.Example_Where_Clause"/>
        </if> 
    </select>
        
</mapper>