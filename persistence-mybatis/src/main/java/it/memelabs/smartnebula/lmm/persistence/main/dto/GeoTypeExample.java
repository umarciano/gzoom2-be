package it.memelabs.smartnebula.lmm.persistence.main.dto;

import java.util.ArrayList;
import java.util.List;

public class GeoTypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public GeoTypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGeoTypeIdIsNull() {
            addCriterion("geo_type_id is null");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdIsNotNull() {
            addCriterion("geo_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdEqualTo(String value) {
            addCriterion("geo_type_id =", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdNotEqualTo(String value) {
            addCriterion("geo_type_id <>", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdGreaterThan(String value) {
            addCriterion("geo_type_id >", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdGreaterThanOrEqualTo(String value) {
            addCriterion("geo_type_id >=", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdLessThan(String value) {
            addCriterion("geo_type_id <", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdLessThanOrEqualTo(String value) {
            addCriterion("geo_type_id <=", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdLike(String value) {
            addCriterion("geo_type_id like", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdNotLike(String value) {
            addCriterion("geo_type_id not like", value, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdIn(List<String> values) {
            addCriterion("geo_type_id in", values, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdNotIn(List<String> values) {
            addCriterion("geo_type_id not in", values, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdBetween(String value1, String value2) {
            addCriterion("geo_type_id between", value1, value2, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdNotBetween(String value1, String value2) {
            addCriterion("geo_type_id not between", value1, value2, "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdIsNull() {
            addCriterion("parent_type_id is null");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdIsNotNull() {
            addCriterion("parent_type_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdEqualTo(String value) {
            addCriterion("parent_type_id =", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdNotEqualTo(String value) {
            addCriterion("parent_type_id <>", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdGreaterThan(String value) {
            addCriterion("parent_type_id >", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdGreaterThanOrEqualTo(String value) {
            addCriterion("parent_type_id >=", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdLessThan(String value) {
            addCriterion("parent_type_id <", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdLessThanOrEqualTo(String value) {
            addCriterion("parent_type_id <=", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdLike(String value) {
            addCriterion("parent_type_id like", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdNotLike(String value) {
            addCriterion("parent_type_id not like", value, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdIn(List<String> values) {
            addCriterion("parent_type_id in", values, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdNotIn(List<String> values) {
            addCriterion("parent_type_id not in", values, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdBetween(String value1, String value2) {
            addCriterion("parent_type_id between", value1, value2, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdNotBetween(String value1, String value2) {
            addCriterion("parent_type_id not between", value1, value2, "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andHasTableIsNull() {
            addCriterion("has_table is null");
            return (Criteria) this;
        }

        public Criteria andHasTableIsNotNull() {
            addCriterion("has_table is not null");
            return (Criteria) this;
        }

        public Criteria andHasTableEqualTo(String value) {
            addCriterion("has_table =", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableNotEqualTo(String value) {
            addCriterion("has_table <>", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableGreaterThan(String value) {
            addCriterion("has_table >", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableGreaterThanOrEqualTo(String value) {
            addCriterion("has_table >=", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableLessThan(String value) {
            addCriterion("has_table <", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableLessThanOrEqualTo(String value) {
            addCriterion("has_table <=", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableLike(String value) {
            addCriterion("has_table like", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableNotLike(String value) {
            addCriterion("has_table not like", value, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableIn(List<String> values) {
            addCriterion("has_table in", values, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableNotIn(List<String> values) {
            addCriterion("has_table not in", values, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableBetween(String value1, String value2) {
            addCriterion("has_table between", value1, value2, "hasTable");
            return (Criteria) this;
        }

        public Criteria andHasTableNotBetween(String value1, String value2) {
            addCriterion("has_table not between", value1, value2, "hasTable");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdLikeInsensitive(String value) {
            addCriterion("lower(geo_type_id) like", (value != null) ? value.toLowerCase() : value , "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdLikeInsensitive(String value) {
            addCriterion("lower(parent_type_id) like", (value != null) ? value.toLowerCase() : value , "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andHasTableLikeInsensitive(String value) {
            addCriterion("lower(has_table) like", (value != null) ? value.toLowerCase() : value , "hasTable");
            return (Criteria) this;
        }

        public Criteria andDescriptionLikeInsensitive(String value) {
            addCriterion("lower(description) like", (value != null) ? value.toLowerCase() : value , "description");
            return (Criteria) this;
        }

        public Criteria andGeoTypeIdEqualToInsensitive(String value) {
            addCriterion("lower(geo_type_id) =", (value != null) ? value.toLowerCase() : value , "geoTypeId");
            return (Criteria) this;
        }

        public Criteria andParentTypeIdEqualToInsensitive(String value) {
            addCriterion("lower(parent_type_id) =", (value != null) ? value.toLowerCase() : value , "parentTypeId");
            return (Criteria) this;
        }

        public Criteria andHasTableEqualToInsensitive(String value) {
            addCriterion("lower(has_table) =", (value != null) ? value.toLowerCase() : value , "hasTable");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualToInsensitive(String value) {
            addCriterion("lower(description) =", (value != null) ? value.toLowerCase() : value , "description");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table geo_type
     *
     * @mbggenerated do_not_delete_during_merge Fri May 06 17:57:24 CEST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table geo_type
     *
     * @mbggenerated Fri May 06 17:57:24 CEST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}