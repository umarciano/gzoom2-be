package it.memelabs.smartnebula.lmm.persistence.main.dto;

import it.memelabs.smartnebula.lmm.persistence.enumeration.EventStatus;
import it.memelabs.smartnebula.lmm.persistence.main.enumeration.NotificationEventType;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class NotificationEventExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public NotificationEventExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> eventIdCriteria;

        protected List<Criterion> statusCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            eventIdCriteria = new ArrayList<Criterion>();
            statusCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getEventIdCriteria() {
            return eventIdCriteria;
        }

        protected void addEventIdCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            eventIdCriteria.add(new Criterion(condition, value, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        protected void addEventIdCriterion(String condition, NotificationEventType value1, NotificationEventType value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            eventIdCriteria.add(new Criterion(condition, value1, value2, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getStatusCriteria() {
            return statusCriteria;
        }

        protected void addStatusCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            statusCriteria.add(new Criterion(condition, value, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        protected void addStatusCriterion(String condition, EventStatus value1, EventStatus value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            statusCriteria.add(new Criterion(condition, value1, value2, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || eventIdCriteria.size() > 0
                || statusCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(eventIdCriteria);
                allCriteria.addAll(statusCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andEventIdIsNull() {
            addCriterion("event_id is null");
            return (Criteria) this;
        }

        public Criteria andEventIdIsNotNull() {
            addCriterion("event_id is not null");
            return (Criteria) this;
        }

        public Criteria andEventIdEqualTo(NotificationEventType value) {
            addEventIdCriterion("event_id =", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotEqualTo(NotificationEventType value) {
            addEventIdCriterion("event_id <>", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThan(NotificationEventType value) {
            addEventIdCriterion("event_id >", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdGreaterThanOrEqualTo(NotificationEventType value) {
            addEventIdCriterion("event_id >=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThan(NotificationEventType value) {
            addEventIdCriterion("event_id <", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLessThanOrEqualTo(NotificationEventType value) {
            addEventIdCriterion("event_id <=", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdLike(NotificationEventType value) {
            addEventIdCriterion("event_id like", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotLike(NotificationEventType value) {
            addEventIdCriterion("event_id not like", value, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdIn(List<NotificationEventType> values) {
            addEventIdCriterion("event_id in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotIn(List<NotificationEventType> values) {
            addEventIdCriterion("event_id not in", values, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdBetween(NotificationEventType value1, NotificationEventType value2) {
            addEventIdCriterion("event_id between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andEventIdNotBetween(NotificationEventType value1, NotificationEventType value2) {
            addEventIdCriterion("event_id not between", value1, value2, "eventId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdIsNull() {
            addCriterion("notification_group_id is null");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdIsNotNull() {
            addCriterion("notification_group_id is not null");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdEqualTo(Long value) {
            addCriterion("notification_group_id =", value, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdNotEqualTo(Long value) {
            addCriterion("notification_group_id <>", value, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdGreaterThan(Long value) {
            addCriterion("notification_group_id >", value, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdGreaterThanOrEqualTo(Long value) {
            addCriterion("notification_group_id >=", value, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdLessThan(Long value) {
            addCriterion("notification_group_id <", value, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdLessThanOrEqualTo(Long value) {
            addCriterion("notification_group_id <=", value, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdIn(List<Long> values) {
            addCriterion("notification_group_id in", values, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdNotIn(List<Long> values) {
            addCriterion("notification_group_id not in", values, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdBetween(Long value1, Long value2) {
            addCriterion("notification_group_id between", value1, value2, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andNotificationGroupIdNotBetween(Long value1, Long value2) {
            addCriterion("notification_group_id not between", value1, value2, "notificationGroupId");
            return (Criteria) this;
        }

        public Criteria andEnabledIsNull() {
            addCriterion("enabled is null");
            return (Criteria) this;
        }

        public Criteria andEnabledIsNotNull() {
            addCriterion("enabled is not null");
            return (Criteria) this;
        }

        public Criteria andEnabledEqualTo(Boolean value) {
            addCriterion("enabled =", value, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledNotEqualTo(Boolean value) {
            addCriterion("enabled <>", value, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledGreaterThan(Boolean value) {
            addCriterion("enabled >", value, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledGreaterThanOrEqualTo(Boolean value) {
            addCriterion("enabled >=", value, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledLessThan(Boolean value) {
            addCriterion("enabled <", value, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledLessThanOrEqualTo(Boolean value) {
            addCriterion("enabled <=", value, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledIn(List<Boolean> values) {
            addCriterion("enabled in", values, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledNotIn(List<Boolean> values) {
            addCriterion("enabled not in", values, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledBetween(Boolean value1, Boolean value2) {
            addCriterion("enabled between", value1, value2, "enabled");
            return (Criteria) this;
        }

        public Criteria andEnabledNotBetween(Boolean value1, Boolean value2) {
            addCriterion("enabled not between", value1, value2, "enabled");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNull() {
            addCriterion("start_date is null");
            return (Criteria) this;
        }

        public Criteria andStartDateIsNotNull() {
            addCriterion("start_date is not null");
            return (Criteria) this;
        }

        public Criteria andStartDateEqualTo(Date value) {
            addCriterionForJDBCDate("start_date =", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("start_date <>", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThan(Date value) {
            addCriterionForJDBCDate("start_date >", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("start_date >=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThan(Date value) {
            addCriterionForJDBCDate("start_date <", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("start_date <=", value, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateIn(List<Date> values) {
            addCriterionForJDBCDate("start_date in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("start_date not in", values, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("start_date between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andStartDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("start_date not between", value1, value2, "startDate");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalIsNull() {
            addCriterion("execution_interval is null");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalIsNotNull() {
            addCriterion("execution_interval is not null");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalEqualTo(Integer value) {
            addCriterion("execution_interval =", value, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalNotEqualTo(Integer value) {
            addCriterion("execution_interval <>", value, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalGreaterThan(Integer value) {
            addCriterion("execution_interval >", value, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalGreaterThanOrEqualTo(Integer value) {
            addCriterion("execution_interval >=", value, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalLessThan(Integer value) {
            addCriterion("execution_interval <", value, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalLessThanOrEqualTo(Integer value) {
            addCriterion("execution_interval <=", value, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalIn(List<Integer> values) {
            addCriterion("execution_interval in", values, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalNotIn(List<Integer> values) {
            addCriterion("execution_interval not in", values, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalBetween(Integer value1, Integer value2) {
            addCriterion("execution_interval between", value1, value2, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andExecutionIntervalNotBetween(Integer value1, Integer value2) {
            addCriterion("execution_interval not between", value1, value2, "executionInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalIsNull() {
            addCriterion("notification_interval is null");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalIsNotNull() {
            addCriterion("notification_interval is not null");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalEqualTo(Integer value) {
            addCriterion("notification_interval =", value, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalNotEqualTo(Integer value) {
            addCriterion("notification_interval <>", value, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalGreaterThan(Integer value) {
            addCriterion("notification_interval >", value, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalGreaterThanOrEqualTo(Integer value) {
            addCriterion("notification_interval >=", value, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalLessThan(Integer value) {
            addCriterion("notification_interval <", value, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalLessThanOrEqualTo(Integer value) {
            addCriterion("notification_interval <=", value, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalIn(List<Integer> values) {
            addCriterion("notification_interval in", values, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalNotIn(List<Integer> values) {
            addCriterion("notification_interval not in", values, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalBetween(Integer value1, Integer value2) {
            addCriterion("notification_interval between", value1, value2, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andNotificationIntervalNotBetween(Integer value1, Integer value2) {
            addCriterion("notification_interval not between", value1, value2, "notificationInterval");
            return (Criteria) this;
        }

        public Criteria andPromiseDateIsNull() {
            addCriterion("promise_date is null");
            return (Criteria) this;
        }

        public Criteria andPromiseDateIsNotNull() {
            addCriterion("promise_date is not null");
            return (Criteria) this;
        }

        public Criteria andPromiseDateEqualTo(Date value) {
            addCriterionForJDBCDate("promise_date =", value, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("promise_date <>", value, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateGreaterThan(Date value) {
            addCriterionForJDBCDate("promise_date >", value, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("promise_date >=", value, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateLessThan(Date value) {
            addCriterionForJDBCDate("promise_date <", value, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("promise_date <=", value, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateIn(List<Date> values) {
            addCriterionForJDBCDate("promise_date in", values, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("promise_date not in", values, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("promise_date between", value1, value2, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andPromiseDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("promise_date not between", value1, value2, "promiseDate");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(EventStatus value) {
            addStatusCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(EventStatus value) {
            addStatusCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(EventStatus value) {
            addStatusCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(EventStatus value) {
            addStatusCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(EventStatus value) {
            addStatusCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(EventStatus value) {
            addStatusCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(EventStatus value) {
            addStatusCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(EventStatus value) {
            addStatusCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<EventStatus> values) {
            addStatusCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<EventStatus> values) {
            addStatusCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(EventStatus value1, EventStatus value2) {
            addStatusCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(EventStatus value1, EventStatus value2) {
            addStatusCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andMessageIsNull() {
            addCriterion("message is null");
            return (Criteria) this;
        }

        public Criteria andMessageIsNotNull() {
            addCriterion("message is not null");
            return (Criteria) this;
        }

        public Criteria andMessageEqualTo(String value) {
            addCriterion("message =", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotEqualTo(String value) {
            addCriterion("message <>", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageGreaterThan(String value) {
            addCriterion("message >", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageGreaterThanOrEqualTo(String value) {
            addCriterion("message >=", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLessThan(String value) {
            addCriterion("message <", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLessThanOrEqualTo(String value) {
            addCriterion("message <=", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageLike(String value) {
            addCriterion("message like", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotLike(String value) {
            addCriterion("message not like", value, "message");
            return (Criteria) this;
        }

        public Criteria andMessageIn(List<String> values) {
            addCriterion("message in", values, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotIn(List<String> values) {
            addCriterion("message not in", values, "message");
            return (Criteria) this;
        }

        public Criteria andMessageBetween(String value1, String value2) {
            addCriterion("message between", value1, value2, "message");
            return (Criteria) this;
        }

        public Criteria andMessageNotBetween(String value1, String value2) {
            addCriterion("message not between", value1, value2, "message");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampIsNull() {
            addCriterion("last_execution_stamp is null");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampIsNotNull() {
            addCriterion("last_execution_stamp is not null");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampEqualTo(Date value) {
            addCriterion("last_execution_stamp =", value, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampNotEqualTo(Date value) {
            addCriterion("last_execution_stamp <>", value, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampGreaterThan(Date value) {
            addCriterion("last_execution_stamp >", value, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampGreaterThanOrEqualTo(Date value) {
            addCriterion("last_execution_stamp >=", value, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampLessThan(Date value) {
            addCriterion("last_execution_stamp <", value, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampLessThanOrEqualTo(Date value) {
            addCriterion("last_execution_stamp <=", value, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampIn(List<Date> values) {
            addCriterion("last_execution_stamp in", values, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampNotIn(List<Date> values) {
            addCriterion("last_execution_stamp not in", values, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampBetween(Date value1, Date value2) {
            addCriterion("last_execution_stamp between", value1, value2, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andLastExecutionStampNotBetween(Date value1, Date value2) {
            addCriterion("last_execution_stamp not between", value1, value2, "lastExecutionStamp");
            return (Criteria) this;
        }

        public Criteria andMessageLikeInsensitive(String value) {
            addCriterion("lower(message) like", (value != null) ? value.toLowerCase() : value , "message");
            return (Criteria) this;
        }

        public Criteria andMessageEqualToInsensitive(String value) {
            addCriterion("lower(message) =", (value != null) ? value.toLowerCase() : value , "message");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table notification_event
     *
     * @mbggenerated do_not_delete_during_merge Tue Nov 15 12:38:17 CET 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table notification_event
     *
     * @mbggenerated Tue Nov 15 12:38:17 CET 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}