package it.memelabs.smartnebula.lmm.persistence.main.dto;

import it.memelabs.smartnebula.lmm.persistence.main.enumeration.EntityStateTag;
import it.memelabs.smartnebula.lmm.persistence.main.enumeration.WorkLogEventDirection;
import it.memelabs.smartnebula.lmm.persistence.main.enumeration.WorkLogEventOrigin;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WorkLogPersonEventExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public WorkLogPersonEventExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> directionCriteria;

        protected List<Criterion> stateTagCriteria;

        protected List<Criterion> originCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            directionCriteria = new ArrayList<Criterion>();
            stateTagCriteria = new ArrayList<Criterion>();
            originCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getDirectionCriteria() {
            return directionCriteria;
        }

        protected void addDirectionCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            directionCriteria.add(new Criterion(condition, value, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        protected void addDirectionCriterion(String condition, WorkLogEventDirection value1, WorkLogEventDirection value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            directionCriteria.add(new Criterion(condition, value1, value2, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getStateTagCriteria() {
            return stateTagCriteria;
        }

        protected void addStateTagCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            stateTagCriteria.add(new Criterion(condition, value, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        protected void addStateTagCriterion(String condition, EntityStateTag value1, EntityStateTag value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            stateTagCriteria.add(new Criterion(condition, value1, value2, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        public List<Criterion> getOriginCriteria() {
            return originCriteria;
        }

        protected void addOriginCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            originCriteria.add(new Criterion(condition, value, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        protected void addOriginCriterion(String condition, WorkLogEventOrigin value1, WorkLogEventOrigin value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            originCriteria.add(new Criterion(condition, value1, value2, "org.apache.ibatis.type.EnumTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || directionCriteria.size() > 0
                || stateTagCriteria.size() > 0
                || originCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(directionCriteria);
                allCriteria.addAll(stateTagCriteria);
                allCriteria.addAll(originCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdIsNull() {
            addCriterion("work_log_id is null");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdIsNotNull() {
            addCriterion("work_log_id is not null");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdEqualTo(Long value) {
            addCriterion("work_log_id =", value, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdNotEqualTo(Long value) {
            addCriterion("work_log_id <>", value, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdGreaterThan(Long value) {
            addCriterion("work_log_id >", value, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdGreaterThanOrEqualTo(Long value) {
            addCriterion("work_log_id >=", value, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdLessThan(Long value) {
            addCriterion("work_log_id <", value, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdLessThanOrEqualTo(Long value) {
            addCriterion("work_log_id <=", value, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdIn(List<Long> values) {
            addCriterion("work_log_id in", values, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdNotIn(List<Long> values) {
            addCriterion("work_log_id not in", values, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdBetween(Long value1, Long value2) {
            addCriterion("work_log_id between", value1, value2, "workLogId");
            return (Criteria) this;
        }

        public Criteria andWorkLogIdNotBetween(Long value1, Long value2) {
            addCriterion("work_log_id not between", value1, value2, "workLogId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdIsNull() {
            addCriterion("person_empl_id is null");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdIsNotNull() {
            addCriterion("person_empl_id is not null");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdEqualTo(Long value) {
            addCriterion("person_empl_id =", value, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdNotEqualTo(Long value) {
            addCriterion("person_empl_id <>", value, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdGreaterThan(Long value) {
            addCriterion("person_empl_id >", value, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdGreaterThanOrEqualTo(Long value) {
            addCriterion("person_empl_id >=", value, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdLessThan(Long value) {
            addCriterion("person_empl_id <", value, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdLessThanOrEqualTo(Long value) {
            addCriterion("person_empl_id <=", value, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdIn(List<Long> values) {
            addCriterion("person_empl_id in", values, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdNotIn(List<Long> values) {
            addCriterion("person_empl_id not in", values, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdBetween(Long value1, Long value2) {
            addCriterion("person_empl_id between", value1, value2, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andPersonEmplIdNotBetween(Long value1, Long value2) {
            addCriterion("person_empl_id not between", value1, value2, "personEmplId");
            return (Criteria) this;
        }

        public Criteria andEventTimestampIsNull() {
            addCriterion("event_timestamp is null");
            return (Criteria) this;
        }

        public Criteria andEventTimestampIsNotNull() {
            addCriterion("event_timestamp is not null");
            return (Criteria) this;
        }

        public Criteria andEventTimestampEqualTo(Date value) {
            addCriterion("event_timestamp =", value, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampNotEqualTo(Date value) {
            addCriterion("event_timestamp <>", value, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampGreaterThan(Date value) {
            addCriterion("event_timestamp >", value, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampGreaterThanOrEqualTo(Date value) {
            addCriterion("event_timestamp >=", value, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampLessThan(Date value) {
            addCriterion("event_timestamp <", value, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampLessThanOrEqualTo(Date value) {
            addCriterion("event_timestamp <=", value, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampIn(List<Date> values) {
            addCriterion("event_timestamp in", values, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampNotIn(List<Date> values) {
            addCriterion("event_timestamp not in", values, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampBetween(Date value1, Date value2) {
            addCriterion("event_timestamp between", value1, value2, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andEventTimestampNotBetween(Date value1, Date value2) {
            addCriterion("event_timestamp not between", value1, value2, "eventTimestamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampIsNull() {
            addCriterion("modified_stamp is null");
            return (Criteria) this;
        }

        public Criteria andModifiedStampIsNotNull() {
            addCriterion("modified_stamp is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedStampEqualTo(Date value) {
            addCriterion("modified_stamp =", value, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampNotEqualTo(Date value) {
            addCriterion("modified_stamp <>", value, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampGreaterThan(Date value) {
            addCriterion("modified_stamp >", value, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampGreaterThanOrEqualTo(Date value) {
            addCriterion("modified_stamp >=", value, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampLessThan(Date value) {
            addCriterion("modified_stamp <", value, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampLessThanOrEqualTo(Date value) {
            addCriterion("modified_stamp <=", value, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampIn(List<Date> values) {
            addCriterion("modified_stamp in", values, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampNotIn(List<Date> values) {
            addCriterion("modified_stamp not in", values, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampBetween(Date value1, Date value2) {
            addCriterion("modified_stamp between", value1, value2, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andModifiedStampNotBetween(Date value1, Date value2) {
            addCriterion("modified_stamp not between", value1, value2, "modifiedStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIsNull() {
            addCriterion("created_stamp is null");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIsNotNull() {
            addCriterion("created_stamp is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedStampEqualTo(Date value) {
            addCriterion("created_stamp =", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotEqualTo(Date value) {
            addCriterion("created_stamp <>", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampGreaterThan(Date value) {
            addCriterion("created_stamp >", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampGreaterThanOrEqualTo(Date value) {
            addCriterion("created_stamp >=", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampLessThan(Date value) {
            addCriterion("created_stamp <", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampLessThanOrEqualTo(Date value) {
            addCriterion("created_stamp <=", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIn(List<Date> values) {
            addCriterion("created_stamp in", values, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotIn(List<Date> values) {
            addCriterion("created_stamp not in", values, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampBetween(Date value1, Date value2) {
            addCriterion("created_stamp between", value1, value2, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotBetween(Date value1, Date value2) {
            addCriterion("created_stamp not between", value1, value2, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdIsNull() {
            addCriterion("created_by_user_id is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdIsNotNull() {
            addCriterion("created_by_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdEqualTo(Long value) {
            addCriterion("created_by_user_id =", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdNotEqualTo(Long value) {
            addCriterion("created_by_user_id <>", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdGreaterThan(Long value) {
            addCriterion("created_by_user_id >", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("created_by_user_id >=", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdLessThan(Long value) {
            addCriterion("created_by_user_id <", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdLessThanOrEqualTo(Long value) {
            addCriterion("created_by_user_id <=", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdIn(List<Long> values) {
            addCriterion("created_by_user_id in", values, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdNotIn(List<Long> values) {
            addCriterion("created_by_user_id not in", values, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdBetween(Long value1, Long value2) {
            addCriterion("created_by_user_id between", value1, value2, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdNotBetween(Long value1, Long value2) {
            addCriterion("created_by_user_id not between", value1, value2, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdIsNull() {
            addCriterion("modified_by_user_id is null");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdIsNotNull() {
            addCriterion("modified_by_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdEqualTo(Long value) {
            addCriterion("modified_by_user_id =", value, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdNotEqualTo(Long value) {
            addCriterion("modified_by_user_id <>", value, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdGreaterThan(Long value) {
            addCriterion("modified_by_user_id >", value, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("modified_by_user_id >=", value, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdLessThan(Long value) {
            addCriterion("modified_by_user_id <", value, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdLessThanOrEqualTo(Long value) {
            addCriterion("modified_by_user_id <=", value, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdIn(List<Long> values) {
            addCriterion("modified_by_user_id in", values, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdNotIn(List<Long> values) {
            addCriterion("modified_by_user_id not in", values, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdBetween(Long value1, Long value2) {
            addCriterion("modified_by_user_id between", value1, value2, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andModifiedByUserIdNotBetween(Long value1, Long value2) {
            addCriterion("modified_by_user_id not between", value1, value2, "modifiedByUserId");
            return (Criteria) this;
        }

        public Criteria andWbsIdIsNull() {
            addCriterion("wbs_id is null");
            return (Criteria) this;
        }

        public Criteria andWbsIdIsNotNull() {
            addCriterion("wbs_id is not null");
            return (Criteria) this;
        }

        public Criteria andWbsIdEqualTo(Long value) {
            addCriterion("wbs_id =", value, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdNotEqualTo(Long value) {
            addCriterion("wbs_id <>", value, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdGreaterThan(Long value) {
            addCriterion("wbs_id >", value, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdGreaterThanOrEqualTo(Long value) {
            addCriterion("wbs_id >=", value, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdLessThan(Long value) {
            addCriterion("wbs_id <", value, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdLessThanOrEqualTo(Long value) {
            addCriterion("wbs_id <=", value, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdIn(List<Long> values) {
            addCriterion("wbs_id in", values, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdNotIn(List<Long> values) {
            addCriterion("wbs_id not in", values, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdBetween(Long value1, Long value2) {
            addCriterion("wbs_id between", value1, value2, "wbsId");
            return (Criteria) this;
        }

        public Criteria andWbsIdNotBetween(Long value1, Long value2) {
            addCriterion("wbs_id not between", value1, value2, "wbsId");
            return (Criteria) this;
        }

        public Criteria andDirectionIsNull() {
            addCriterion("direction is null");
            return (Criteria) this;
        }

        public Criteria andDirectionIsNotNull() {
            addCriterion("direction is not null");
            return (Criteria) this;
        }

        public Criteria andDirectionEqualTo(WorkLogEventDirection value) {
            addDirectionCriterion("direction =", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotEqualTo(WorkLogEventDirection value) {
            addDirectionCriterion("direction <>", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionGreaterThan(WorkLogEventDirection value) {
            addDirectionCriterion("direction >", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionGreaterThanOrEqualTo(WorkLogEventDirection value) {
            addDirectionCriterion("direction >=", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionLessThan(WorkLogEventDirection value) {
            addDirectionCriterion("direction <", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionLessThanOrEqualTo(WorkLogEventDirection value) {
            addDirectionCriterion("direction <=", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionLike(WorkLogEventDirection value) {
            addDirectionCriterion("direction like", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotLike(WorkLogEventDirection value) {
            addDirectionCriterion("direction not like", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionIn(List<WorkLogEventDirection> values) {
            addDirectionCriterion("direction in", values, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotIn(List<WorkLogEventDirection> values) {
            addDirectionCriterion("direction not in", values, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionBetween(WorkLogEventDirection value1, WorkLogEventDirection value2) {
            addDirectionCriterion("direction between", value1, value2, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotBetween(WorkLogEventDirection value1, WorkLogEventDirection value2) {
            addDirectionCriterion("direction not between", value1, value2, "direction");
            return (Criteria) this;
        }

        public Criteria andStateIdIsNull() {
            addCriterion("state_id is null");
            return (Criteria) this;
        }

        public Criteria andStateIdIsNotNull() {
            addCriterion("state_id is not null");
            return (Criteria) this;
        }

        public Criteria andStateIdEqualTo(Long value) {
            addCriterion("state_id =", value, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdNotEqualTo(Long value) {
            addCriterion("state_id <>", value, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdGreaterThan(Long value) {
            addCriterion("state_id >", value, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdGreaterThanOrEqualTo(Long value) {
            addCriterion("state_id >=", value, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdLessThan(Long value) {
            addCriterion("state_id <", value, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdLessThanOrEqualTo(Long value) {
            addCriterion("state_id <=", value, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdIn(List<Long> values) {
            addCriterion("state_id in", values, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdNotIn(List<Long> values) {
            addCriterion("state_id not in", values, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdBetween(Long value1, Long value2) {
            addCriterion("state_id between", value1, value2, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateIdNotBetween(Long value1, Long value2) {
            addCriterion("state_id not between", value1, value2, "stateId");
            return (Criteria) this;
        }

        public Criteria andStateTagIsNull() {
            addCriterion("state_tag is null");
            return (Criteria) this;
        }

        public Criteria andStateTagIsNotNull() {
            addCriterion("state_tag is not null");
            return (Criteria) this;
        }

        public Criteria andStateTagEqualTo(EntityStateTag value) {
            addStateTagCriterion("state_tag =", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagNotEqualTo(EntityStateTag value) {
            addStateTagCriterion("state_tag <>", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagGreaterThan(EntityStateTag value) {
            addStateTagCriterion("state_tag >", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagGreaterThanOrEqualTo(EntityStateTag value) {
            addStateTagCriterion("state_tag >=", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagLessThan(EntityStateTag value) {
            addStateTagCriterion("state_tag <", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagLessThanOrEqualTo(EntityStateTag value) {
            addStateTagCriterion("state_tag <=", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagLike(EntityStateTag value) {
            addStateTagCriterion("state_tag like", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagNotLike(EntityStateTag value) {
            addStateTagCriterion("state_tag not like", value, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagIn(List<EntityStateTag> values) {
            addStateTagCriterion("state_tag in", values, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagNotIn(List<EntityStateTag> values) {
            addStateTagCriterion("state_tag not in", values, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagBetween(EntityStateTag value1, EntityStateTag value2) {
            addStateTagCriterion("state_tag between", value1, value2, "stateTag");
            return (Criteria) this;
        }

        public Criteria andStateTagNotBetween(EntityStateTag value1, EntityStateTag value2) {
            addStateTagCriterion("state_tag not between", value1, value2, "stateTag");
            return (Criteria) this;
        }

        public Criteria andErrorIsNull() {
            addCriterion("error is null");
            return (Criteria) this;
        }

        public Criteria andErrorIsNotNull() {
            addCriterion("error is not null");
            return (Criteria) this;
        }

        public Criteria andErrorEqualTo(String value) {
            addCriterion("error =", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotEqualTo(String value) {
            addCriterion("error <>", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThan(String value) {
            addCriterion("error >", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorGreaterThanOrEqualTo(String value) {
            addCriterion("error >=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThan(String value) {
            addCriterion("error <", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLessThanOrEqualTo(String value) {
            addCriterion("error <=", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorLike(String value) {
            addCriterion("error like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotLike(String value) {
            addCriterion("error not like", value, "error");
            return (Criteria) this;
        }

        public Criteria andErrorIn(List<String> values) {
            addCriterion("error in", values, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotIn(List<String> values) {
            addCriterion("error not in", values, "error");
            return (Criteria) this;
        }

        public Criteria andErrorBetween(String value1, String value2) {
            addCriterion("error between", value1, value2, "error");
            return (Criteria) this;
        }

        public Criteria andErrorNotBetween(String value1, String value2) {
            addCriterion("error not between", value1, value2, "error");
            return (Criteria) this;
        }

        public Criteria andReceivedDataIsNull() {
            addCriterion("received_data is null");
            return (Criteria) this;
        }

        public Criteria andReceivedDataIsNotNull() {
            addCriterion("received_data is not null");
            return (Criteria) this;
        }

        public Criteria andReceivedDataEqualTo(String value) {
            addCriterion("received_data =", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataNotEqualTo(String value) {
            addCriterion("received_data <>", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataGreaterThan(String value) {
            addCriterion("received_data >", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataGreaterThanOrEqualTo(String value) {
            addCriterion("received_data >=", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataLessThan(String value) {
            addCriterion("received_data <", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataLessThanOrEqualTo(String value) {
            addCriterion("received_data <=", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataLike(String value) {
            addCriterion("received_data like", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataNotLike(String value) {
            addCriterion("received_data not like", value, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataIn(List<String> values) {
            addCriterion("received_data in", values, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataNotIn(List<String> values) {
            addCriterion("received_data not in", values, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataBetween(String value1, String value2) {
            addCriterion("received_data between", value1, value2, "receivedData");
            return (Criteria) this;
        }

        public Criteria andReceivedDataNotBetween(String value1, String value2) {
            addCriterion("received_data not between", value1, value2, "receivedData");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNull() {
            addCriterion("group_id is null");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNotNull() {
            addCriterion("group_id is not null");
            return (Criteria) this;
        }

        public Criteria andGroupIdEqualTo(String value) {
            addCriterion("group_id =", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotEqualTo(String value) {
            addCriterion("group_id <>", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdGreaterThan(String value) {
            addCriterion("group_id >", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdGreaterThanOrEqualTo(String value) {
            addCriterion("group_id >=", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLessThan(String value) {
            addCriterion("group_id <", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLessThanOrEqualTo(String value) {
            addCriterion("group_id <=", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLike(String value) {
            addCriterion("group_id like", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotLike(String value) {
            addCriterion("group_id not like", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdIn(List<String> values) {
            addCriterion("group_id in", values, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotIn(List<String> values) {
            addCriterion("group_id not in", values, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdBetween(String value1, String value2) {
            addCriterion("group_id between", value1, value2, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotBetween(String value1, String value2) {
            addCriterion("group_id not between", value1, value2, "groupId");
            return (Criteria) this;
        }

        public Criteria andOriginIsNull() {
            addCriterion("origin is null");
            return (Criteria) this;
        }

        public Criteria andOriginIsNotNull() {
            addCriterion("origin is not null");
            return (Criteria) this;
        }

        public Criteria andOriginEqualTo(WorkLogEventOrigin value) {
            addOriginCriterion("origin =", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotEqualTo(WorkLogEventOrigin value) {
            addOriginCriterion("origin <>", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginGreaterThan(WorkLogEventOrigin value) {
            addOriginCriterion("origin >", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginGreaterThanOrEqualTo(WorkLogEventOrigin value) {
            addOriginCriterion("origin >=", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginLessThan(WorkLogEventOrigin value) {
            addOriginCriterion("origin <", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginLessThanOrEqualTo(WorkLogEventOrigin value) {
            addOriginCriterion("origin <=", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginLike(WorkLogEventOrigin value) {
            addOriginCriterion("origin like", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotLike(WorkLogEventOrigin value) {
            addOriginCriterion("origin not like", value, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginIn(List<WorkLogEventOrigin> values) {
            addOriginCriterion("origin in", values, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotIn(List<WorkLogEventOrigin> values) {
            addOriginCriterion("origin not in", values, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginBetween(WorkLogEventOrigin value1, WorkLogEventOrigin value2) {
            addOriginCriterion("origin between", value1, value2, "origin");
            return (Criteria) this;
        }

        public Criteria andOriginNotBetween(WorkLogEventOrigin value1, WorkLogEventOrigin value2) {
            addOriginCriterion("origin not between", value1, value2, "origin");
            return (Criteria) this;
        }

        public Criteria andErrorLikeInsensitive(String value) {
            addCriterion("lower(error) like", (value != null) ? value.toLowerCase() : value , "error");
            return (Criteria) this;
        }

        public Criteria andReceivedDataLikeInsensitive(String value) {
            addCriterion("lower(received_data) like", (value != null) ? value.toLowerCase() : value , "receivedData");
            return (Criteria) this;
        }

        public Criteria andGroupIdLikeInsensitive(String value) {
            addCriterion("lower(group_id) like", (value != null) ? value.toLowerCase() : value , "groupId");
            return (Criteria) this;
        }

        public Criteria andErrorEqualToInsensitive(String value) {
            addCriterion("lower(error) =", (value != null) ? value.toLowerCase() : value , "error");
            return (Criteria) this;
        }

        public Criteria andReceivedDataEqualToInsensitive(String value) {
            addCriterion("lower(received_data) =", (value != null) ? value.toLowerCase() : value , "receivedData");
            return (Criteria) this;
        }

        public Criteria andGroupIdEqualToInsensitive(String value) {
            addCriterion("lower(group_id) =", (value != null) ? value.toLowerCase() : value , "groupId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table work_log_person_event
     *
     * @mbggenerated do_not_delete_during_merge Wed Jan 04 17:07:15 CET 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table work_log_person_event
     *
     * @mbggenerated Wed Jan 04 17:07:15 CET 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}