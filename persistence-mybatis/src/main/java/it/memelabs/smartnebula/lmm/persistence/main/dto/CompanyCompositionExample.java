package it.memelabs.smartnebula.lmm.persistence.main.dto;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CompanyCompositionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public CompanyCompositionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andParentCompanyIdIsNull() {
            addCriterion("parent_company_id is null");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdIsNotNull() {
            addCriterion("parent_company_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdEqualTo(Long value) {
            addCriterion("parent_company_id =", value, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdNotEqualTo(Long value) {
            addCriterion("parent_company_id <>", value, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdGreaterThan(Long value) {
            addCriterion("parent_company_id >", value, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parent_company_id >=", value, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdLessThan(Long value) {
            addCriterion("parent_company_id <", value, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdLessThanOrEqualTo(Long value) {
            addCriterion("parent_company_id <=", value, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdIn(List<Long> values) {
            addCriterion("parent_company_id in", values, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdNotIn(List<Long> values) {
            addCriterion("parent_company_id not in", values, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdBetween(Long value1, Long value2) {
            addCriterion("parent_company_id between", value1, value2, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andParentCompanyIdNotBetween(Long value1, Long value2) {
            addCriterion("parent_company_id not between", value1, value2, "parentCompanyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("company_id is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("company_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Long value) {
            addCriterion("company_id =", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Long value) {
            addCriterion("company_id <>", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Long value) {
            addCriterion("company_id >", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Long value) {
            addCriterion("company_id >=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Long value) {
            addCriterion("company_id <", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Long value) {
            addCriterion("company_id <=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Long> values) {
            addCriterion("company_id in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Long> values) {
            addCriterion("company_id not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Long value1, Long value2) {
            addCriterion("company_id between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Long value1, Long value2) {
            addCriterion("company_id not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIsNull() {
            addCriterion("created_stamp is null");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIsNotNull() {
            addCriterion("created_stamp is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedStampEqualTo(Date value) {
            addCriterion("created_stamp =", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotEqualTo(Date value) {
            addCriterion("created_stamp <>", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampGreaterThan(Date value) {
            addCriterion("created_stamp >", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampGreaterThanOrEqualTo(Date value) {
            addCriterion("created_stamp >=", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampLessThan(Date value) {
            addCriterion("created_stamp <", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampLessThanOrEqualTo(Date value) {
            addCriterion("created_stamp <=", value, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampIn(List<Date> values) {
            addCriterion("created_stamp in", values, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotIn(List<Date> values) {
            addCriterion("created_stamp not in", values, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampBetween(Date value1, Date value2) {
            addCriterion("created_stamp between", value1, value2, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedStampNotBetween(Date value1, Date value2) {
            addCriterion("created_stamp not between", value1, value2, "createdStamp");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdIsNull() {
            addCriterion("created_by_user_id is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdIsNotNull() {
            addCriterion("created_by_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdEqualTo(Long value) {
            addCriterion("created_by_user_id =", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdNotEqualTo(Long value) {
            addCriterion("created_by_user_id <>", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdGreaterThan(Long value) {
            addCriterion("created_by_user_id >", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("created_by_user_id >=", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdLessThan(Long value) {
            addCriterion("created_by_user_id <", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdLessThanOrEqualTo(Long value) {
            addCriterion("created_by_user_id <=", value, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdIn(List<Long> values) {
            addCriterion("created_by_user_id in", values, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdNotIn(List<Long> values) {
            addCriterion("created_by_user_id not in", values, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdBetween(Long value1, Long value2) {
            addCriterion("created_by_user_id between", value1, value2, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andCreatedByUserIdNotBetween(Long value1, Long value2) {
            addCriterion("created_by_user_id not between", value1, value2, "createdByUserId");
            return (Criteria) this;
        }

        public Criteria andPercentageIsNull() {
            addCriterion("percentage is null");
            return (Criteria) this;
        }

        public Criteria andPercentageIsNotNull() {
            addCriterion("percentage is not null");
            return (Criteria) this;
        }

        public Criteria andPercentageEqualTo(BigDecimal value) {
            addCriterion("percentage =", value, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageNotEqualTo(BigDecimal value) {
            addCriterion("percentage <>", value, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageGreaterThan(BigDecimal value) {
            addCriterion("percentage >", value, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("percentage >=", value, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageLessThan(BigDecimal value) {
            addCriterion("percentage <", value, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageLessThanOrEqualTo(BigDecimal value) {
            addCriterion("percentage <=", value, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageIn(List<BigDecimal> values) {
            addCriterion("percentage in", values, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageNotIn(List<BigDecimal> values) {
            addCriterion("percentage not in", values, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("percentage between", value1, value2, "percentage");
            return (Criteria) this;
        }

        public Criteria andPercentageNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("percentage not between", value1, value2, "percentage");
            return (Criteria) this;
        }

        public Criteria andEmissaryIsNull() {
            addCriterion("emissary is null");
            return (Criteria) this;
        }

        public Criteria andEmissaryIsNotNull() {
            addCriterion("emissary is not null");
            return (Criteria) this;
        }

        public Criteria andEmissaryEqualTo(Boolean value) {
            addCriterion("emissary =", value, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryNotEqualTo(Boolean value) {
            addCriterion("emissary <>", value, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryGreaterThan(Boolean value) {
            addCriterion("emissary >", value, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryGreaterThanOrEqualTo(Boolean value) {
            addCriterion("emissary >=", value, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryLessThan(Boolean value) {
            addCriterion("emissary <", value, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryLessThanOrEqualTo(Boolean value) {
            addCriterion("emissary <=", value, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryIn(List<Boolean> values) {
            addCriterion("emissary in", values, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryNotIn(List<Boolean> values) {
            addCriterion("emissary not in", values, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryBetween(Boolean value1, Boolean value2) {
            addCriterion("emissary between", value1, value2, "emissary");
            return (Criteria) this;
        }

        public Criteria andEmissaryNotBetween(Boolean value1, Boolean value2) {
            addCriterion("emissary not between", value1, value2, "emissary");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_composition
     *
     * @mbggenerated do_not_delete_during_merge Wed May 04 12:48:14 CEST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table company_composition
     *
     * @mbggenerated Wed May 04 12:48:14 CEST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}